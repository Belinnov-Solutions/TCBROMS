//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TCBROMS_Android_Webservice.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ChineseTillEntities1 : DbContext
    {
        public ChineseTillEntities1()
            : base("name=ChineseTillEntities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<tblAddress> tblAddresses { get; set; }
        public virtual DbSet<tblAvailableDeliveryStaff> tblAvailableDeliveryStaffs { get; set; }
        public virtual DbSet<tblBarInvoice> tblBarInvoices { get; set; }
        public virtual DbSet<tblBarInvoiceItem> tblBarInvoiceItems { get; set; }
        public virtual DbSet<tblBoxGroup> tblBoxGroups { get; set; }
        public virtual DbSet<tblBoxProductLinker> tblBoxProductLinkers { get; set; }
        public virtual DbSet<tblCashingUpHistory> tblCashingUpHistories { get; set; }
        public virtual DbSet<tblChineseWednesday> tblChineseWednesdays { get; set; }
        public virtual DbSet<tblCustomerActivity> tblCustomerActivities { get; set; }
        public virtual DbSet<tblDailyPin> tblDailyPins { get; set; }
        public virtual DbSet<tblDeliveryPostCode> tblDeliveryPostCodes { get; set; }
        public virtual DbSet<tblDeliveryStaff> tblDeliveryStaffs { get; set; }
        public virtual DbSet<tblDrinksSold> tblDrinksSolds { get; set; }
        public virtual DbSet<tbliPodLog> tbliPodLogs { get; set; }
        public virtual DbSet<tblMenu> tblMenus { get; set; }
        public virtual DbSet<tblMenuItem> tblMenuItems { get; set; }
        public virtual DbSet<tblNoSale> tblNoSales { get; set; }
        public virtual DbSet<tblNote> tblNotes { get; set; }
        public virtual DbSet<tblOptionLinking> tblOptionLinkings { get; set; }
        public virtual DbSet<tblOrder> tblOrders { get; set; }
        public virtual DbSet<tblOrderAdjustmentAfterBill> tblOrderAdjustmentAfterBills { get; set; }
        public virtual DbSet<tblOrderBuffetItem> tblOrderBuffetItems { get; set; }
        public virtual DbSet<tblOrderFeedback> tblOrderFeedbacks { get; set; }
        public virtual DbSet<tblOrderPart> tblOrderParts { get; set; }
        public virtual DbSet<tblOrderPartDelete> tblOrderPartDeletes { get; set; }
        public virtual DbSet<tblOrderPartOption> tblOrderPartOptions { get; set; }
        public virtual DbSet<tblOrderPartOptionDelete> tblOrderPartOptionDeletes { get; set; }
        public virtual DbSet<tblOrderPayment> tblOrderPayments { get; set; }
        public virtual DbSet<tblOrderVoucher> tblOrderVouchers { get; set; }
        public virtual DbSet<tblPrinter> tblPrinters { get; set; }
        public virtual DbSet<tblPrintFridgeQtyHistory> tblPrintFridgeQtyHistories { get; set; }
        public virtual DbSet<tblPrintQueue> tblPrintQueues { get; set; }
        public virtual DbSet<tblPrintRefillQtyHistory> tblPrintRefillQtyHistories { get; set; }
        public virtual DbSet<tblProduct> tblProducts { get; set; }
        public virtual DbSet<tblProductGroup> tblProductGroups { get; set; }
        public virtual DbSet<tblProductLinker> tblProductLinkers { get; set; }
        public virtual DbSet<tblProductRefill> tblProductRefills { get; set; }
        public virtual DbSet<tblProductRefillTemplate> tblProductRefillTemplates { get; set; }
        public virtual DbSet<tblProductRefillTemplatesItem> tblProductRefillTemplatesItems { get; set; }
        public virtual DbSet<tblProductTimeRestriction> tblProductTimeRestrictions { get; set; }
        public virtual DbSet<tblProductType> tblProductTypes { get; set; }
        public virtual DbSet<tblProductWastage> tblProductWastages { get; set; }
        public virtual DbSet<tblPromotion> tblPromotions { get; set; }
        public virtual DbSet<tblRedeemedProduct> tblRedeemedProducts { get; set; }
        public virtual DbSet<tblRefund> tblRefunds { get; set; }
        public virtual DbSet<tblRequestBilliPod> tblRequestBilliPods { get; set; }
        public virtual DbSet<tblReservation> tblReservations { get; set; }
        public virtual DbSet<tblReservationAdvancedBooking> tblReservationAdvancedBookings { get; set; }
        public virtual DbSet<tblReservationMaxPer15Min> tblReservationMaxPer15Min { get; set; }
        public virtual DbSet<tblReservationName> tblReservationNames { get; set; }
        public virtual DbSet<tblSalesRecording> tblSalesRecordings { get; set; }
        public virtual DbSet<tblStockOrder> tblStockOrders { get; set; }
        public virtual DbSet<tblStockOrderProduct> tblStockOrderProducts { get; set; }
        public virtual DbSet<tblStockProductsCount> tblStockProductsCounts { get; set; }
        public virtual DbSet<tblStockTemplateProduct> tblStockTemplateProducts { get; set; }
        public virtual DbSet<tblStockTemplate> tblStockTemplates { get; set; }
        public virtual DbSet<tblStripePayment> tblStripePayments { get; set; }
        public virtual DbSet<tblSupplierOrder> tblSupplierOrders { get; set; }
        public virtual DbSet<tblSupplierOrderImage> tblSupplierOrderImages { get; set; }
        public virtual DbSet<tblSupplierOrderItem> tblSupplierOrderItems { get; set; }
        public virtual DbSet<tblTableOrder> tblTableOrders { get; set; }
        public virtual DbSet<tblTable> tblTables { get; set; }
        public virtual DbSet<tblTableSection> tblTableSections { get; set; }
        public virtual DbSet<tblTakeAwayOrderDelivery> tblTakeAwayOrderDeliveries { get; set; }
        public virtual DbSet<tblTakeAwayOrder> tblTakeAwayOrders { get; set; }
        public virtual DbSet<tblTillPromotion> tblTillPromotions { get; set; }
        public virtual DbSet<tblUser> tblUsers { get; set; }
        public virtual DbSet<tblUserLevel> tblUserLevels { get; set; }
        public virtual DbSet<tblZCardSale> tblZCardSales { get; set; }
        public virtual DbSet<tblZCashSale> tblZCashSales { get; set; }
        public virtual DbSet<tblZHistory> tblZHistories { get; set; }
        public virtual DbSet<tblAppOptionRestriction> tblAppOptionRestrictions { get; set; }
        public virtual DbSet<tblAppOption> tblAppOptions { get; set; }
        public virtual DbSet<tblAppUser> tblAppUsers { get; set; }
        public virtual DbSet<tblCustomer> tblCustomers { get; set; }
        public virtual DbSet<tblCustomerOrder> tblCustomerOrders { get; set; }
        public virtual DbSet<tblCustomerWaitList> tblCustomerWaitLists { get; set; }
        public virtual DbSet<tblDrinksTarget> tblDrinksTargets { get; set; }
        public virtual DbSet<tblGiftVoucher> tblGiftVouchers { get; set; }
        public virtual DbSet<tblHandheldDevice> tblHandheldDevices { get; set; }
        public virtual DbSet<tblJoinedTable> tblJoinedTables { get; set; }
        public virtual DbSet<tblOrderPartOptionTemp> tblOrderPartOptionTemps { get; set; }
        public virtual DbSet<tblOrderPartTemp> tblOrderPartTemps { get; set; }
        public virtual DbSet<tblProductsTarget> tblProductsTargets { get; set; }
        public virtual DbSet<tblProductTypeTarget> tblProductTypeTargets { get; set; }
        public virtual DbSet<tblTablesCleaning> tblTablesCleanings { get; set; }
        public virtual DbSet<tblUnclaimedProduct> tblUnclaimedProducts { get; set; }
        public virtual DbSet<tblUserSwipeHistory> tblUserSwipeHistories { get; set; }
        public virtual DbSet<tblWashroomCheck> tblWashroomChecks { get; set; }
        public virtual DbSet<vAllIndex> vAllIndexes { get; set; }
        public virtual DbSet<vwANProduct> vwANProducts { get; set; }
        public virtual DbSet<vwANProducts1> vwANProducts1 { get; set; }
        public virtual DbSet<vwANTableStatu> vwANTableStatus { get; set; }
        public virtual DbSet<vwANTableStatus1> vwANTableStatus1 { get; set; }
        public virtual DbSet<vwANTableStatus2> vwANTableStatus2 { get; set; }
        public virtual DbSet<vwDetailOrderItem> vwDetailOrderItems { get; set; }
        public virtual DbSet<vwItemsModifiedAfterBill> vwItemsModifiedAfterBills { get; set; }
        public virtual DbSet<vwItemsOnOrder> vwItemsOnOrders { get; set; }
        public virtual DbSet<vwOrderItem> vwOrderItems { get; set; }
        public virtual DbSet<vwProduct> vwProducts { get; set; }
        public virtual DbSet<vwProductsOnOrder> vwProductsOnOrders { get; set; }
        public virtual DbSet<vwProductsOnOrder2> vwProductsOnOrder2 { get; set; }
        public virtual DbSet<vwProductsOnOrder3> vwProductsOnOrder3 { get; set; }
        public virtual DbSet<vwProductsOnOrder4> vwProductsOnOrder4 { get; set; }
        public virtual DbSet<vwProductsOnOrderTemp> vwProductsOnOrderTemps { get; set; }
        public virtual DbSet<vwProductsOptionsOnOrderTemp> vwProductsOptionsOnOrderTemps { get; set; }
        public virtual DbSet<vwReservation> vwReservations { get; set; }
        public virtual DbSet<vwReservations1> vwReservations1 { get; set; }
        public virtual DbSet<vwTableStatu> vwTableStatus { get; set; }
        public virtual DbSet<vwTableStatusForiPhone> vwTableStatusForiPhones { get; set; }
        public virtual DbSet<tblCustomerFeedback> tblCustomerFeedbacks { get; set; }
        public virtual DbSet<tblPrintBuffetItem> tblPrintBuffetItems { get; set; }
        public virtual DbSet<tblSagePayment> tblSagePayments { get; set; }
        public virtual DbSet<tblSCAmountUpdate> tblSCAmountUpdates { get; set; }
        public virtual DbSet<tblFullDayMenu> tblFullDayMenus { get; set; }
        public virtual DbSet<tblRecordPayment> tblRecordPayments { get; set; }
    
        public virtual int GenerateRandomString(Nullable<bool> useNumbers, Nullable<bool> useLowerCase, Nullable<bool> useUpperCase, string charactersToUse, Nullable<short> passwordLength, ObjectParameter password)
        {
            var useNumbersParameter = useNumbers.HasValue ?
                new ObjectParameter("useNumbers", useNumbers) :
                new ObjectParameter("useNumbers", typeof(bool));
    
            var useLowerCaseParameter = useLowerCase.HasValue ?
                new ObjectParameter("useLowerCase", useLowerCase) :
                new ObjectParameter("useLowerCase", typeof(bool));
    
            var useUpperCaseParameter = useUpperCase.HasValue ?
                new ObjectParameter("useUpperCase", useUpperCase) :
                new ObjectParameter("useUpperCase", typeof(bool));
    
            var charactersToUseParameter = charactersToUse != null ?
                new ObjectParameter("charactersToUse", charactersToUse) :
                new ObjectParameter("charactersToUse", typeof(string));
    
            var passwordLengthParameter = passwordLength.HasValue ?
                new ObjectParameter("passwordLength", passwordLength) :
                new ObjectParameter("passwordLength", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GenerateRandomString", useNumbersParameter, useLowerCaseParameter, useUpperCaseParameter, charactersToUseParameter, passwordLengthParameter, password);
        }
    
        public virtual int GenerateTriggers(string schemaname, string tablename, string dbname, Nullable<bool> generateScriptOnly)
        {
            var schemanameParameter = schemaname != null ?
                new ObjectParameter("Schemaname", schemaname) :
                new ObjectParameter("Schemaname", typeof(string));
    
            var tablenameParameter = tablename != null ?
                new ObjectParameter("Tablename", tablename) :
                new ObjectParameter("Tablename", typeof(string));
    
            var dbnameParameter = dbname != null ?
                new ObjectParameter("Dbname", dbname) :
                new ObjectParameter("Dbname", typeof(string));
    
            var generateScriptOnlyParameter = generateScriptOnly.HasValue ?
                new ObjectParameter("GenerateScriptOnly", generateScriptOnly) :
                new ObjectParameter("GenerateScriptOnly", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GenerateTriggers", schemanameParameter, tablenameParameter, dbnameParameter, generateScriptOnlyParameter);
        }
    
        public virtual ObjectResult<TableState_Result> TableState(Nullable<int> tableID)
        {
            var tableIDParameter = tableID.HasValue ?
                new ObjectParameter("TableID", tableID) :
                new ObjectParameter("TableID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TableState_Result>("TableState", tableIDParameter);
        }
    
        public virtual int usp_AN_AssignTable(Nullable<int> waitListID, Nullable<int> tableID, Nullable<int> userID, ObjectParameter rID)
        {
            var waitListIDParameter = waitListID.HasValue ?
                new ObjectParameter("WaitListID", waitListID) :
                new ObjectParameter("WaitListID", typeof(int));
    
            var tableIDParameter = tableID.HasValue ?
                new ObjectParameter("TableID", tableID) :
                new ObjectParameter("TableID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_AN_AssignTable", waitListIDParameter, tableIDParameter, userIDParameter, rID);
        }
    
        public virtual ObjectResult<usp_AN_AuthenticateUser_Result> usp_AN_AuthenticateUser(Nullable<int> iCode, Nullable<int> iPin, string deviceID, string token)
        {
            var iCodeParameter = iCode.HasValue ?
                new ObjectParameter("iCode", iCode) :
                new ObjectParameter("iCode", typeof(int));
    
            var iPinParameter = iPin.HasValue ?
                new ObjectParameter("iPin", iPin) :
                new ObjectParameter("iPin", typeof(int));
    
            var deviceIDParameter = deviceID != null ?
                new ObjectParameter("DeviceID", deviceID) :
                new ObjectParameter("DeviceID", typeof(string));
    
            var tokenParameter = token != null ?
                new ObjectParameter("Token", token) :
                new ObjectParameter("Token", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_AN_AuthenticateUser_Result>("usp_AN_AuthenticateUser", iCodeParameter, iPinParameter, deviceIDParameter, tokenParameter);
        }
    
        public virtual ObjectResult<usp_AN_CheckTableOrder_Result> usp_AN_CheckTableOrder(Nullable<System.Guid> orderGUID)
        {
            var orderGUIDParameter = orderGUID.HasValue ?
                new ObjectParameter("OrderGUID", orderGUID) :
                new ObjectParameter("OrderGUID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_AN_CheckTableOrder_Result>("usp_AN_CheckTableOrder", orderGUIDParameter);
        }
    
        public virtual int usp_AN_EditWLCustomer(Nullable<int> rID, string name, string mobile, Nullable<int> adCount, Nullable<int> kdCount, Nullable<int> jnCount, Nullable<int> totalGuests, Nullable<int> totalSeats, Nullable<int> hC, Nullable<int> wC, Nullable<int> prams, ObjectParameter rOW)
        {
            var rIDParameter = rID.HasValue ?
                new ObjectParameter("RID", rID) :
                new ObjectParameter("RID", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var adCountParameter = adCount.HasValue ?
                new ObjectParameter("AdCount", adCount) :
                new ObjectParameter("AdCount", typeof(int));
    
            var kdCountParameter = kdCount.HasValue ?
                new ObjectParameter("KdCount", kdCount) :
                new ObjectParameter("KdCount", typeof(int));
    
            var jnCountParameter = jnCount.HasValue ?
                new ObjectParameter("JnCount", jnCount) :
                new ObjectParameter("JnCount", typeof(int));
    
            var totalGuestsParameter = totalGuests.HasValue ?
                new ObjectParameter("TotalGuests", totalGuests) :
                new ObjectParameter("TotalGuests", typeof(int));
    
            var totalSeatsParameter = totalSeats.HasValue ?
                new ObjectParameter("TotalSeats", totalSeats) :
                new ObjectParameter("TotalSeats", typeof(int));
    
            var hCParameter = hC.HasValue ?
                new ObjectParameter("HC", hC) :
                new ObjectParameter("HC", typeof(int));
    
            var wCParameter = wC.HasValue ?
                new ObjectParameter("WC", wC) :
                new ObjectParameter("WC", typeof(int));
    
            var pramsParameter = prams.HasValue ?
                new ObjectParameter("Prams", prams) :
                new ObjectParameter("Prams", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_AN_EditWLCustomer", rIDParameter, nameParameter, mobileParameter, adCountParameter, kdCountParameter, jnCountParameter, totalGuestsParameter, totalSeatsParameter, hCParameter, wCParameter, pramsParameter, rOW);
        }
    
        public virtual ObjectResult<usp_AN_FetchTables_Result> usp_AN_FetchTables()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_AN_FetchTables_Result>("usp_AN_FetchTables");
        }
    
        public virtual ObjectResult<usp_AN_FetchTablesV1_Result> usp_AN_FetchTablesV1(Nullable<int> sectionId)
        {
            var sectionIdParameter = sectionId.HasValue ?
                new ObjectParameter("SectionId", sectionId) :
                new ObjectParameter("SectionId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_AN_FetchTablesV1_Result>("usp_AN_FetchTablesV1", sectionIdParameter);
        }
    
        public virtual int usp_AN_FreeUpTable(Nullable<int> tableId, Nullable<int> userId, ObjectParameter rID)
        {
            var tableIdParameter = tableId.HasValue ?
                new ObjectParameter("TableId", tableId) :
                new ObjectParameter("TableId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_AN_FreeUpTable", tableIdParameter, userIdParameter, rID);
        }
    
        public virtual ObjectResult<usp_AN_GetCustomerDetails_Result> usp_AN_GetCustomerDetails(string mobile)
        {
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_AN_GetCustomerDetails_Result>("usp_AN_GetCustomerDetails", mobileParameter);
        }
    
        public virtual ObjectResult<usp_AN_GetHeadCounts_Result> usp_AN_GetHeadCounts()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_AN_GetHeadCounts_Result>("usp_AN_GetHeadCounts");
        }
    
        public virtual ObjectResult<string> usp_AN_GetLatestNews()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_AN_GetLatestNews");
        }
    
        public virtual ObjectResult<string> usp_AN_GetParentTableNumber(Nullable<int> tableId)
        {
            var tableIdParameter = tableId.HasValue ?
                new ObjectParameter("TableId", tableId) :
                new ObjectParameter("TableId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_AN_GetParentTableNumber", tableIdParameter);
        }
    
        public virtual ObjectResult<usp_AN_GetPendingRefillProducts_Result> usp_AN_GetPendingRefillProducts()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_AN_GetPendingRefillProducts_Result>("usp_AN_GetPendingRefillProducts");
        }
    
        public virtual ObjectResult<usp_AN_GetProductGroup_Result> usp_AN_GetProductGroup()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_AN_GetProductGroup_Result>("usp_AN_GetProductGroup");
        }
    
        public virtual ObjectResult<usp_AN_GetProductLinker_Result> usp_AN_GetProductLinker()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_AN_GetProductLinker_Result>("usp_AN_GetProductLinker");
        }
    
        public virtual ObjectResult<usp_AN_GetProducts_Result> usp_AN_GetProducts()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_AN_GetProducts_Result>("usp_AN_GetProducts");
        }
    
        public virtual ObjectResult<usp_AN_GetProductsTarget_Result> usp_AN_GetProductsTarget()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_AN_GetProductsTarget_Result>("usp_AN_GetProductsTarget");
        }
    
        public virtual ObjectResult<usp_AN_GetStockOrderData_Result> usp_AN_GetStockOrderData()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_AN_GetStockOrderData_Result>("usp_AN_GetStockOrderData");
        }
    
        public virtual ObjectResult<usp_AN_GetStockOrderItemsData_Result> usp_AN_GetStockOrderItemsData(Nullable<int> pONumber)
        {
            var pONumberParameter = pONumber.HasValue ?
                new ObjectParameter("PONumber", pONumber) :
                new ObjectParameter("PONumber", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_AN_GetStockOrderItemsData_Result>("usp_AN_GetStockOrderItemsData", pONumberParameter);
        }
    
        public virtual ObjectResult<usp_AN_GetTableOrder_Result> usp_AN_GetTableOrder(Nullable<int> tableID)
        {
            var tableIDParameter = tableID.HasValue ?
                new ObjectParameter("TableID", tableID) :
                new ObjectParameter("TableID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_AN_GetTableOrder_Result>("usp_AN_GetTableOrder", tableIDParameter);
        }
    
        public virtual ObjectResult<usp_AN_GetUserOrders_Result> usp_AN_GetUserOrders(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_AN_GetUserOrders_Result>("usp_AN_GetUserOrders", userIDParameter);
        }
    
        public virtual int usp_AN_GetWaitListDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_AN_GetWaitListDetails");
        }
    
        public virtual int usp_AN_InsertCustomer(string name, string emailID, string mobile, string dateOfBirth, Nullable<int> waitingTime, Nullable<int> adCount, Nullable<int> kdCount, Nullable<int> jnCount, Nullable<int> userId, string type, Nullable<int> totalGuests, Nullable<int> totalSeats, Nullable<int> hC, Nullable<int> wC, Nullable<int> prams, ObjectParameter rID)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var emailIDParameter = emailID != null ?
                new ObjectParameter("EmailID", emailID) :
                new ObjectParameter("EmailID", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var dateOfBirthParameter = dateOfBirth != null ?
                new ObjectParameter("DateOfBirth", dateOfBirth) :
                new ObjectParameter("DateOfBirth", typeof(string));
    
            var waitingTimeParameter = waitingTime.HasValue ?
                new ObjectParameter("WaitingTime", waitingTime) :
                new ObjectParameter("WaitingTime", typeof(int));
    
            var adCountParameter = adCount.HasValue ?
                new ObjectParameter("AdCount", adCount) :
                new ObjectParameter("AdCount", typeof(int));
    
            var kdCountParameter = kdCount.HasValue ?
                new ObjectParameter("KdCount", kdCount) :
                new ObjectParameter("KdCount", typeof(int));
    
            var jnCountParameter = jnCount.HasValue ?
                new ObjectParameter("JnCount", jnCount) :
                new ObjectParameter("JnCount", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var totalGuestsParameter = totalGuests.HasValue ?
                new ObjectParameter("TotalGuests", totalGuests) :
                new ObjectParameter("TotalGuests", typeof(int));
    
            var totalSeatsParameter = totalSeats.HasValue ?
                new ObjectParameter("TotalSeats", totalSeats) :
                new ObjectParameter("TotalSeats", typeof(int));
    
            var hCParameter = hC.HasValue ?
                new ObjectParameter("HC", hC) :
                new ObjectParameter("HC", typeof(int));
    
            var wCParameter = wC.HasValue ?
                new ObjectParameter("WC", wC) :
                new ObjectParameter("WC", typeof(int));
    
            var pramsParameter = prams.HasValue ?
                new ObjectParameter("Prams", prams) :
                new ObjectParameter("Prams", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_AN_InsertCustomer", nameParameter, emailIDParameter, mobileParameter, dateOfBirthParameter, waitingTimeParameter, adCountParameter, kdCountParameter, jnCountParameter, userIdParameter, typeParameter, totalGuestsParameter, totalSeatsParameter, hCParameter, wCParameter, pramsParameter, rID);
        }
    
        public virtual int usp_AN_InsertOrder(Nullable<int> tableID, Nullable<int> tabID, string tableNumber, string time, Nullable<int> userID, Nullable<int> custID, Nullable<int> custCount, Nullable<int> adCount, Nullable<int> kdCount, Nullable<int> jnCount, Nullable<bool> prevCust, string reservedCustomer, Nullable<int> reservationID, ObjectParameter orderID)
        {
            var tableIDParameter = tableID.HasValue ?
                new ObjectParameter("TableID", tableID) :
                new ObjectParameter("TableID", typeof(int));
    
            var tabIDParameter = tabID.HasValue ?
                new ObjectParameter("TabID", tabID) :
                new ObjectParameter("TabID", typeof(int));
    
            var tableNumberParameter = tableNumber != null ?
                new ObjectParameter("TableNumber", tableNumber) :
                new ObjectParameter("TableNumber", typeof(string));
    
            var timeParameter = time != null ?
                new ObjectParameter("Time", time) :
                new ObjectParameter("Time", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var custIDParameter = custID.HasValue ?
                new ObjectParameter("CustID", custID) :
                new ObjectParameter("CustID", typeof(int));
    
            var custCountParameter = custCount.HasValue ?
                new ObjectParameter("CustCount", custCount) :
                new ObjectParameter("CustCount", typeof(int));
    
            var adCountParameter = adCount.HasValue ?
                new ObjectParameter("AdCount", adCount) :
                new ObjectParameter("AdCount", typeof(int));
    
            var kdCountParameter = kdCount.HasValue ?
                new ObjectParameter("KdCount", kdCount) :
                new ObjectParameter("KdCount", typeof(int));
    
            var jnCountParameter = jnCount.HasValue ?
                new ObjectParameter("JnCount", jnCount) :
                new ObjectParameter("JnCount", typeof(int));
    
            var prevCustParameter = prevCust.HasValue ?
                new ObjectParameter("PrevCust", prevCust) :
                new ObjectParameter("PrevCust", typeof(bool));
    
            var reservedCustomerParameter = reservedCustomer != null ?
                new ObjectParameter("ReservedCustomer", reservedCustomer) :
                new ObjectParameter("ReservedCustomer", typeof(string));
    
            var reservationIDParameter = reservationID.HasValue ?
                new ObjectParameter("ReservationID", reservationID) :
                new ObjectParameter("ReservationID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_AN_InsertOrder", tableIDParameter, tabIDParameter, tableNumberParameter, timeParameter, userIDParameter, custIDParameter, custCountParameter, adCountParameter, kdCountParameter, jnCountParameter, prevCustParameter, reservedCustomerParameter, reservationIDParameter, orderID);
        }
    
        public virtual int usp_AN_InsertOrder_V1(Nullable<int> tableID, Nullable<int> tabID, string tableNumber, string time, Nullable<int> userID, Nullable<int> custID, Nullable<int> custCount, Nullable<int> adCount, Nullable<int> kdCount, Nullable<int> jnCount, Nullable<bool> prevCust, string reservedCustomer, Nullable<int> reservationID, ObjectParameter orderID)
        {
            var tableIDParameter = tableID.HasValue ?
                new ObjectParameter("TableID", tableID) :
                new ObjectParameter("TableID", typeof(int));
    
            var tabIDParameter = tabID.HasValue ?
                new ObjectParameter("TabID", tabID) :
                new ObjectParameter("TabID", typeof(int));
    
            var tableNumberParameter = tableNumber != null ?
                new ObjectParameter("TableNumber", tableNumber) :
                new ObjectParameter("TableNumber", typeof(string));
    
            var timeParameter = time != null ?
                new ObjectParameter("Time", time) :
                new ObjectParameter("Time", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var custIDParameter = custID.HasValue ?
                new ObjectParameter("CustID", custID) :
                new ObjectParameter("CustID", typeof(int));
    
            var custCountParameter = custCount.HasValue ?
                new ObjectParameter("CustCount", custCount) :
                new ObjectParameter("CustCount", typeof(int));
    
            var adCountParameter = adCount.HasValue ?
                new ObjectParameter("AdCount", adCount) :
                new ObjectParameter("AdCount", typeof(int));
    
            var kdCountParameter = kdCount.HasValue ?
                new ObjectParameter("KdCount", kdCount) :
                new ObjectParameter("KdCount", typeof(int));
    
            var jnCountParameter = jnCount.HasValue ?
                new ObjectParameter("JnCount", jnCount) :
                new ObjectParameter("JnCount", typeof(int));
    
            var prevCustParameter = prevCust.HasValue ?
                new ObjectParameter("PrevCust", prevCust) :
                new ObjectParameter("PrevCust", typeof(bool));
    
            var reservedCustomerParameter = reservedCustomer != null ?
                new ObjectParameter("ReservedCustomer", reservedCustomer) :
                new ObjectParameter("ReservedCustomer", typeof(string));
    
            var reservationIDParameter = reservationID.HasValue ?
                new ObjectParameter("ReservationID", reservationID) :
                new ObjectParameter("ReservationID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_AN_InsertOrder_V1", tableIDParameter, tabIDParameter, tableNumberParameter, timeParameter, userIDParameter, custIDParameter, custCountParameter, adCountParameter, kdCountParameter, jnCountParameter, prevCustParameter, reservedCustomerParameter, reservationIDParameter, orderID);
        }
    
        public virtual int usp_AN_InsertOrderPart(Nullable<System.Guid> orderGUID, Nullable<int> productID, Nullable<int> qTY, Nullable<decimal> price, Nullable<decimal> total, Nullable<int> userID, string type, string orderType, Nullable<int> orderNo, Nullable<int> tableID, Nullable<int> optionID)
        {
            var orderGUIDParameter = orderGUID.HasValue ?
                new ObjectParameter("OrderGUID", orderGUID) :
                new ObjectParameter("OrderGUID", typeof(System.Guid));
    
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var qTYParameter = qTY.HasValue ?
                new ObjectParameter("QTY", qTY) :
                new ObjectParameter("QTY", typeof(int));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(decimal));
    
            var totalParameter = total.HasValue ?
                new ObjectParameter("Total", total) :
                new ObjectParameter("Total", typeof(decimal));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var orderNoParameter = orderNo.HasValue ?
                new ObjectParameter("OrderNo", orderNo) :
                new ObjectParameter("OrderNo", typeof(int));
    
            var tableIDParameter = tableID.HasValue ?
                new ObjectParameter("TableID", tableID) :
                new ObjectParameter("TableID", typeof(int));
    
            var optionIDParameter = optionID.HasValue ?
                new ObjectParameter("OptionID", optionID) :
                new ObjectParameter("OptionID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_AN_InsertOrderPart", orderGUIDParameter, productIDParameter, qTYParameter, priceParameter, totalParameter, userIDParameter, typeParameter, orderTypeParameter, orderNoParameter, tableIDParameter, optionIDParameter);
        }
    
        public virtual int usp_AN_InsertOrderPartV2(Nullable<System.Guid> orderGUID, Nullable<int> productID, Nullable<int> qTY, Nullable<decimal> price, Nullable<decimal> total, Nullable<int> userID, string type, string orderType, Nullable<int> orderNo, Nullable<int> tableID, Nullable<int> optionID, Nullable<decimal> vAT)
        {
            var orderGUIDParameter = orderGUID.HasValue ?
                new ObjectParameter("OrderGUID", orderGUID) :
                new ObjectParameter("OrderGUID", typeof(System.Guid));
    
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var qTYParameter = qTY.HasValue ?
                new ObjectParameter("QTY", qTY) :
                new ObjectParameter("QTY", typeof(int));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(decimal));
    
            var totalParameter = total.HasValue ?
                new ObjectParameter("Total", total) :
                new ObjectParameter("Total", typeof(decimal));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var orderNoParameter = orderNo.HasValue ?
                new ObjectParameter("OrderNo", orderNo) :
                new ObjectParameter("OrderNo", typeof(int));
    
            var tableIDParameter = tableID.HasValue ?
                new ObjectParameter("TableID", tableID) :
                new ObjectParameter("TableID", typeof(int));
    
            var optionIDParameter = optionID.HasValue ?
                new ObjectParameter("OptionID", optionID) :
                new ObjectParameter("OptionID", typeof(int));
    
            var vATParameter = vAT.HasValue ?
                new ObjectParameter("VAT", vAT) :
                new ObjectParameter("VAT", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_AN_InsertOrderPartV2", orderGUIDParameter, productIDParameter, qTYParameter, priceParameter, totalParameter, userIDParameter, typeParameter, orderTypeParameter, orderNoParameter, tableIDParameter, optionIDParameter, vATParameter);
        }
    
        public virtual int usp_AN_InsertPrintQueue(Nullable<int> user, string pC, string printer, string receipt)
        {
            var userParameter = user.HasValue ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(int));
    
            var pCParameter = pC != null ?
                new ObjectParameter("PC", pC) :
                new ObjectParameter("PC", typeof(string));
    
            var printerParameter = printer != null ?
                new ObjectParameter("Printer", printer) :
                new ObjectParameter("Printer", typeof(string));
    
            var receiptParameter = receipt != null ?
                new ObjectParameter("Receipt", receipt) :
                new ObjectParameter("Receipt", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_AN_InsertPrintQueue", userParameter, pCParameter, printerParameter, receiptParameter);
        }
    
        public virtual int usp_AN_InsertProductWastage(Nullable<int> productID, Nullable<double> qty)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var qtyParameter = qty.HasValue ?
                new ObjectParameter("Qty", qty) :
                new ObjectParameter("Qty", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_AN_InsertProductWastage", productIDParameter, qtyParameter);
        }
    
        public virtual int usp_AN_InsertRefillProduct(Nullable<int> pID, string productName, string size, Nullable<int> userFK, Nullable<int> productQty, string pCName)
        {
            var pIDParameter = pID.HasValue ?
                new ObjectParameter("PID", pID) :
                new ObjectParameter("PID", typeof(int));
    
            var productNameParameter = productName != null ?
                new ObjectParameter("ProductName", productName) :
                new ObjectParameter("ProductName", typeof(string));
    
            var sizeParameter = size != null ?
                new ObjectParameter("Size", size) :
                new ObjectParameter("Size", typeof(string));
    
            var userFKParameter = userFK.HasValue ?
                new ObjectParameter("UserFK", userFK) :
                new ObjectParameter("UserFK", typeof(int));
    
            var productQtyParameter = productQty.HasValue ?
                new ObjectParameter("ProductQty", productQty) :
                new ObjectParameter("ProductQty", typeof(int));
    
            var pCNameParameter = pCName != null ?
                new ObjectParameter("PCName", pCName) :
                new ObjectParameter("PCName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_AN_InsertRefillProduct", pIDParameter, productNameParameter, sizeParameter, userFKParameter, productQtyParameter, pCNameParameter);
        }
    
        public virtual int usp_AN_LinkTable(Nullable<int> tableId, Nullable<int> masterTableId, ObjectParameter rID)
        {
            var tableIdParameter = tableId.HasValue ?
                new ObjectParameter("TableId", tableId) :
                new ObjectParameter("TableId", typeof(int));
    
            var masterTableIdParameter = masterTableId.HasValue ?
                new ObjectParameter("MasterTableId", masterTableId) :
                new ObjectParameter("MasterTableId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_AN_LinkTable", tableIdParameter, masterTableIdParameter, rID);
        }
    
        public virtual int usp_AN_LogoutUser(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_AN_LogoutUser", userIDParameter);
        }
    
        public virtual int usp_AN_ReleaseTable(Nullable<int> tableId, Nullable<int> userId, ObjectParameter rID)
        {
            var tableIdParameter = tableId.HasValue ?
                new ObjectParameter("TableId", tableId) :
                new ObjectParameter("TableId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_AN_ReleaseTable", tableIdParameter, userIdParameter, rID);
        }
    
        public virtual int usp_AN_RequestBill(Nullable<int> tableId, Nullable<System.Guid> orderId, ObjectParameter updatedRow)
        {
            var tableIdParameter = tableId.HasValue ?
                new ObjectParameter("TableId", tableId) :
                new ObjectParameter("TableId", typeof(int));
    
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_AN_RequestBill", tableIdParameter, orderIdParameter, updatedRow);
        }
    
        public virtual int usp_AN_RevertAllocation(Nullable<int> reservationId, Nullable<int> userId, ObjectParameter rID)
        {
            var reservationIdParameter = reservationId.HasValue ?
                new ObjectParameter("ReservationId", reservationId) :
                new ObjectParameter("ReservationId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_AN_RevertAllocation", reservationIdParameter, userIdParameter, rID);
        }
    
        public virtual int usp_AN_RevertUnAllocation(Nullable<int> reservationId, Nullable<int> resTime, ObjectParameter rID)
        {
            var reservationIdParameter = reservationId.HasValue ?
                new ObjectParameter("ReservationId", reservationId) :
                new ObjectParameter("ReservationId", typeof(int));
    
            var resTimeParameter = resTime.HasValue ?
                new ObjectParameter("ResTime", resTime) :
                new ObjectParameter("ResTime", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_AN_RevertUnAllocation", reservationIdParameter, resTimeParameter, rID);
        }
    
        public virtual int usp_AN_SetTableCleaning(Nullable<System.Guid> orderGUID, Nullable<int> currentStatus)
        {
            var orderGUIDParameter = orderGUID.HasValue ?
                new ObjectParameter("OrderGUID", orderGUID) :
                new ObjectParameter("OrderGUID", typeof(System.Guid));
    
            var currentStatusParameter = currentStatus.HasValue ?
                new ObjectParameter("CurrentStatus", currentStatus) :
                new ObjectParameter("CurrentStatus", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_AN_SetTableCleaning", orderGUIDParameter, currentStatusParameter);
        }
    
        public virtual int usp_AN_SetWLUnAllocated(Nullable<int> rID, ObjectParameter rOW)
        {
            var rIDParameter = rID.HasValue ?
                new ObjectParameter("RID", rID) :
                new ObjectParameter("RID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_AN_SetWLUnAllocated", rIDParameter, rOW);
        }
    
        public virtual int usp_AN_UpdateAllProductStatus(Nullable<System.Guid> oid, ObjectParameter date)
        {
            var oidParameter = oid.HasValue ?
                new ObjectParameter("Oid", oid) :
                new ObjectParameter("Oid", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_AN_UpdateAllProductStatus", oidParameter, date);
        }
    
        public virtual int usp_AN_UpdateHeadCount(Nullable<System.Guid> orderGUID, Nullable<int> adCount, Nullable<int> kdCount, Nullable<int> jnCount)
        {
            var orderGUIDParameter = orderGUID.HasValue ?
                new ObjectParameter("OrderGUID", orderGUID) :
                new ObjectParameter("OrderGUID", typeof(System.Guid));
    
            var adCountParameter = adCount.HasValue ?
                new ObjectParameter("AdCount", adCount) :
                new ObjectParameter("AdCount", typeof(int));
    
            var kdCountParameter = kdCount.HasValue ?
                new ObjectParameter("KdCount", kdCount) :
                new ObjectParameter("KdCount", typeof(int));
    
            var jnCountParameter = jnCount.HasValue ?
                new ObjectParameter("JnCount", jnCount) :
                new ObjectParameter("JnCount", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_AN_UpdateHeadCount", orderGUIDParameter, adCountParameter, kdCountParameter, jnCountParameter);
        }
    
        public virtual int usp_AN_UpdateHeadCount_V1(Nullable<System.Guid> orderGUID, Nullable<int> adCount, Nullable<int> kdCount, Nullable<int> jnCount, Nullable<int> tableId)
        {
            var orderGUIDParameter = orderGUID.HasValue ?
                new ObjectParameter("OrderGUID", orderGUID) :
                new ObjectParameter("OrderGUID", typeof(System.Guid));
    
            var adCountParameter = adCount.HasValue ?
                new ObjectParameter("AdCount", adCount) :
                new ObjectParameter("AdCount", typeof(int));
    
            var kdCountParameter = kdCount.HasValue ?
                new ObjectParameter("KdCount", kdCount) :
                new ObjectParameter("KdCount", typeof(int));
    
            var jnCountParameter = jnCount.HasValue ?
                new ObjectParameter("JnCount", jnCount) :
                new ObjectParameter("JnCount", typeof(int));
    
            var tableIdParameter = tableId.HasValue ?
                new ObjectParameter("TableId", tableId) :
                new ObjectParameter("TableId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_AN_UpdateHeadCount_V1", orderGUIDParameter, adCountParameter, kdCountParameter, jnCountParameter, tableIdParameter);
        }
    
        public virtual int usp_AN_UpdateJoinedTables(Nullable<System.Guid> orderGUID, Nullable<int> tableId)
        {
            var orderGUIDParameter = orderGUID.HasValue ?
                new ObjectParameter("OrderGUID", orderGUID) :
                new ObjectParameter("OrderGUID", typeof(System.Guid));
    
            var tableIdParameter = tableId.HasValue ?
                new ObjectParameter("TableId", tableId) :
                new ObjectParameter("TableId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_AN_UpdateJoinedTables", orderGUIDParameter, tableIdParameter);
        }
    
        public virtual int usp_AN_UpdateProductStatus(Nullable<int> oPid, Nullable<int> pid, Nullable<int> optionId, Nullable<System.Guid> oid, Nullable<int> orderNo, ObjectParameter date)
        {
            var oPidParameter = oPid.HasValue ?
                new ObjectParameter("OPid", oPid) :
                new ObjectParameter("OPid", typeof(int));
    
            var pidParameter = pid.HasValue ?
                new ObjectParameter("Pid", pid) :
                new ObjectParameter("Pid", typeof(int));
    
            var optionIdParameter = optionId.HasValue ?
                new ObjectParameter("OptionId", optionId) :
                new ObjectParameter("OptionId", typeof(int));
    
            var oidParameter = oid.HasValue ?
                new ObjectParameter("Oid", oid) :
                new ObjectParameter("Oid", typeof(System.Guid));
    
            var orderNoParameter = orderNo.HasValue ?
                new ObjectParameter("OrderNo", orderNo) :
                new ObjectParameter("OrderNo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_AN_UpdateProductStatus", oPidParameter, pidParameter, optionIdParameter, oidParameter, orderNoParameter, date);
        }
    
        public virtual int usp_AN_UpdateRefillProduct(Nullable<int> pID)
        {
            var pIDParameter = pID.HasValue ?
                new ObjectParameter("PID", pID) :
                new ObjectParameter("PID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_AN_UpdateRefillProduct", pIDParameter);
        }
    
        public virtual int usp_AN_UpdateStockOrderSend(Nullable<int> pONumber)
        {
            var pONumberParameter = pONumber.HasValue ?
                new ObjectParameter("PONumber", pONumber) :
                new ObjectParameter("PONumber", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_AN_UpdateStockOrderSend", pONumberParameter);
        }
    
        public virtual int usp_AN_UpdateWashroomCheck(Nullable<int> userID, string name, ObjectParameter updatedRow)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_AN_UpdateWashroomCheck", userIDParameter, nameParameter, updatedRow);
        }
    
        public virtual int usp_CP_CreateNewTillUser(string userName, Nullable<int> userLevel)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var userLevelParameter = userLevel.HasValue ?
                new ObjectParameter("UserLevel", userLevel) :
                new ObjectParameter("UserLevel", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_CP_CreateNewTillUser", userNameParameter, userLevelParameter);
        }
    
        public virtual int usp_CP_CreateUserCode(ObjectParameter code)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_CP_CreateUserCode", code);
        }
    
        public virtual int usp_DBMAINT_ArchiveData()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DBMAINT_ArchiveData");
        }
    
        public virtual ObjectResult<usp_DBMAINT_TableSizes_Result> usp_DBMAINT_TableSizes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_DBMAINT_TableSizes_Result>("usp_DBMAINT_TableSizes");
        }
    
        public virtual ObjectResult<usp_ExportProducts_Result> usp_ExportProducts()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ExportProducts_Result>("usp_ExportProducts");
        }
    
        public virtual int usp_Messenger_AddPrinter(string printerName)
        {
            var printerNameParameter = printerName != null ?
                new ObjectParameter("PrinterName", printerName) :
                new ObjectParameter("PrinterName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Messenger_AddPrinter", printerNameParameter);
        }
    
        public virtual int usp_Messenger_ClearPrinters()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Messenger_ClearPrinters");
        }
    
        public virtual ObjectResult<string> usp_Messenger_GetLocationForPrinters()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_Messenger_GetLocationForPrinters");
        }
    
        public virtual int usp_MF_AddNewRefund(string payment, Nullable<decimal> grandTotal, Nullable<int> userId, string name, string reason, string pCName, ObjectParameter @return)
        {
            var paymentParameter = payment != null ?
                new ObjectParameter("Payment", payment) :
                new ObjectParameter("Payment", typeof(string));
    
            var grandTotalParameter = grandTotal.HasValue ?
                new ObjectParameter("GrandTotal", grandTotal) :
                new ObjectParameter("GrandTotal", typeof(decimal));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var reasonParameter = reason != null ?
                new ObjectParameter("Reason", reason) :
                new ObjectParameter("Reason", typeof(string));
    
            var pCNameParameter = pCName != null ?
                new ObjectParameter("PCName", pCName) :
                new ObjectParameter("PCName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_MF_AddNewRefund", paymentParameter, grandTotalParameter, userIdParameter, nameParameter, reasonParameter, pCNameParameter, @return);
        }
    
        public virtual int usp_MF_AddReservation(string foreName, string reservationUnder, string contactNumber, string reservationNotes, Nullable<short> noOfGuests, Nullable<System.DateTime> reservationDate, Nullable<int> reservationTime, Nullable<bool> onlineReservation, Nullable<bool> bDepositPaid, Nullable<System.Guid> orderGUID, Nullable<bool> c2P, Nullable<decimal> c2Pvalue, Nullable<int> noOfSeats, Nullable<int> noOfHighChairs, Nullable<int> noOfWheelChairs, Nullable<int> noOfPrams, ObjectParameter reservationID)
        {
            var foreNameParameter = foreName != null ?
                new ObjectParameter("ForeName", foreName) :
                new ObjectParameter("ForeName", typeof(string));
    
            var reservationUnderParameter = reservationUnder != null ?
                new ObjectParameter("ReservationUnder", reservationUnder) :
                new ObjectParameter("ReservationUnder", typeof(string));
    
            var contactNumberParameter = contactNumber != null ?
                new ObjectParameter("ContactNumber", contactNumber) :
                new ObjectParameter("ContactNumber", typeof(string));
    
            var reservationNotesParameter = reservationNotes != null ?
                new ObjectParameter("ReservationNotes", reservationNotes) :
                new ObjectParameter("ReservationNotes", typeof(string));
    
            var noOfGuestsParameter = noOfGuests.HasValue ?
                new ObjectParameter("NoOfGuests", noOfGuests) :
                new ObjectParameter("NoOfGuests", typeof(short));
    
            var reservationDateParameter = reservationDate.HasValue ?
                new ObjectParameter("ReservationDate", reservationDate) :
                new ObjectParameter("ReservationDate", typeof(System.DateTime));
    
            var reservationTimeParameter = reservationTime.HasValue ?
                new ObjectParameter("ReservationTime", reservationTime) :
                new ObjectParameter("ReservationTime", typeof(int));
    
            var onlineReservationParameter = onlineReservation.HasValue ?
                new ObjectParameter("OnlineReservation", onlineReservation) :
                new ObjectParameter("OnlineReservation", typeof(bool));
    
            var bDepositPaidParameter = bDepositPaid.HasValue ?
                new ObjectParameter("bDepositPaid", bDepositPaid) :
                new ObjectParameter("bDepositPaid", typeof(bool));
    
            var orderGUIDParameter = orderGUID.HasValue ?
                new ObjectParameter("OrderGUID", orderGUID) :
                new ObjectParameter("OrderGUID", typeof(System.Guid));
    
            var c2PParameter = c2P.HasValue ?
                new ObjectParameter("C2P", c2P) :
                new ObjectParameter("C2P", typeof(bool));
    
            var c2PvalueParameter = c2Pvalue.HasValue ?
                new ObjectParameter("C2Pvalue", c2Pvalue) :
                new ObjectParameter("C2Pvalue", typeof(decimal));
    
            var noOfSeatsParameter = noOfSeats.HasValue ?
                new ObjectParameter("NoOfSeats", noOfSeats) :
                new ObjectParameter("NoOfSeats", typeof(int));
    
            var noOfHighChairsParameter = noOfHighChairs.HasValue ?
                new ObjectParameter("NoOfHighChairs", noOfHighChairs) :
                new ObjectParameter("NoOfHighChairs", typeof(int));
    
            var noOfWheelChairsParameter = noOfWheelChairs.HasValue ?
                new ObjectParameter("NoOfWheelChairs", noOfWheelChairs) :
                new ObjectParameter("NoOfWheelChairs", typeof(int));
    
            var noOfPramsParameter = noOfPrams.HasValue ?
                new ObjectParameter("NoOfPrams", noOfPrams) :
                new ObjectParameter("NoOfPrams", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_MF_AddReservation", foreNameParameter, reservationUnderParameter, contactNumberParameter, reservationNotesParameter, noOfGuestsParameter, reservationDateParameter, reservationTimeParameter, onlineReservationParameter, bDepositPaidParameter, orderGUIDParameter, c2PParameter, c2PvalueParameter, noOfSeatsParameter, noOfHighChairsParameter, noOfWheelChairsParameter, noOfPramsParameter, reservationID);
        }
    
        public virtual int usp_MF_AddReservation_V2(string foreName, string reservationUnder, string contactNumber, string reservationNotes, Nullable<short> noOfGuests, Nullable<System.DateTime> reservationDate, Nullable<int> reservationTime, Nullable<bool> onlineReservation, Nullable<bool> bDepositPaid, Nullable<System.Guid> orderGUID, Nullable<bool> c2P, Nullable<decimal> c2Pvalue, Nullable<int> noOfSeats, Nullable<int> noOfHighChairs, Nullable<int> noOfWheelChairs, Nullable<int> noOfPrams, Nullable<bool> telReservation, ObjectParameter reservationID)
        {
            var foreNameParameter = foreName != null ?
                new ObjectParameter("ForeName", foreName) :
                new ObjectParameter("ForeName", typeof(string));
    
            var reservationUnderParameter = reservationUnder != null ?
                new ObjectParameter("ReservationUnder", reservationUnder) :
                new ObjectParameter("ReservationUnder", typeof(string));
    
            var contactNumberParameter = contactNumber != null ?
                new ObjectParameter("ContactNumber", contactNumber) :
                new ObjectParameter("ContactNumber", typeof(string));
    
            var reservationNotesParameter = reservationNotes != null ?
                new ObjectParameter("ReservationNotes", reservationNotes) :
                new ObjectParameter("ReservationNotes", typeof(string));
    
            var noOfGuestsParameter = noOfGuests.HasValue ?
                new ObjectParameter("NoOfGuests", noOfGuests) :
                new ObjectParameter("NoOfGuests", typeof(short));
    
            var reservationDateParameter = reservationDate.HasValue ?
                new ObjectParameter("ReservationDate", reservationDate) :
                new ObjectParameter("ReservationDate", typeof(System.DateTime));
    
            var reservationTimeParameter = reservationTime.HasValue ?
                new ObjectParameter("ReservationTime", reservationTime) :
                new ObjectParameter("ReservationTime", typeof(int));
    
            var onlineReservationParameter = onlineReservation.HasValue ?
                new ObjectParameter("OnlineReservation", onlineReservation) :
                new ObjectParameter("OnlineReservation", typeof(bool));
    
            var bDepositPaidParameter = bDepositPaid.HasValue ?
                new ObjectParameter("bDepositPaid", bDepositPaid) :
                new ObjectParameter("bDepositPaid", typeof(bool));
    
            var orderGUIDParameter = orderGUID.HasValue ?
                new ObjectParameter("OrderGUID", orderGUID) :
                new ObjectParameter("OrderGUID", typeof(System.Guid));
    
            var c2PParameter = c2P.HasValue ?
                new ObjectParameter("C2P", c2P) :
                new ObjectParameter("C2P", typeof(bool));
    
            var c2PvalueParameter = c2Pvalue.HasValue ?
                new ObjectParameter("C2Pvalue", c2Pvalue) :
                new ObjectParameter("C2Pvalue", typeof(decimal));
    
            var noOfSeatsParameter = noOfSeats.HasValue ?
                new ObjectParameter("NoOfSeats", noOfSeats) :
                new ObjectParameter("NoOfSeats", typeof(int));
    
            var noOfHighChairsParameter = noOfHighChairs.HasValue ?
                new ObjectParameter("NoOfHighChairs", noOfHighChairs) :
                new ObjectParameter("NoOfHighChairs", typeof(int));
    
            var noOfWheelChairsParameter = noOfWheelChairs.HasValue ?
                new ObjectParameter("NoOfWheelChairs", noOfWheelChairs) :
                new ObjectParameter("NoOfWheelChairs", typeof(int));
    
            var noOfPramsParameter = noOfPrams.HasValue ?
                new ObjectParameter("NoOfPrams", noOfPrams) :
                new ObjectParameter("NoOfPrams", typeof(int));
    
            var telReservationParameter = telReservation.HasValue ?
                new ObjectParameter("TelReservation", telReservation) :
                new ObjectParameter("TelReservation", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_MF_AddReservation_V2", foreNameParameter, reservationUnderParameter, contactNumberParameter, reservationNotesParameter, noOfGuestsParameter, reservationDateParameter, reservationTimeParameter, onlineReservationParameter, bDepositPaidParameter, orderGUIDParameter, c2PParameter, c2PvalueParameter, noOfSeatsParameter, noOfHighChairsParameter, noOfWheelChairsParameter, noOfPramsParameter, telReservationParameter, reservationID);
        }
    
        public virtual int usp_MF_AddReservation_V3(string foreName, string reservationUnder, string contactNumber, string reservationNotes, Nullable<short> noOfGuests, Nullable<System.DateTime> reservationDate, Nullable<int> reservationTime, Nullable<bool> onlineReservation, Nullable<bool> bDepositPaid, Nullable<System.Guid> orderGUID, Nullable<bool> c2P, Nullable<decimal> c2Pvalue, Nullable<int> noOfSeats, Nullable<int> noOfHighChairs, Nullable<int> noOfWheelChairs, Nullable<int> noOfPrams, Nullable<bool> telReservation, Nullable<int> deposit, ObjectParameter reservationID)
        {
            var foreNameParameter = foreName != null ?
                new ObjectParameter("ForeName", foreName) :
                new ObjectParameter("ForeName", typeof(string));
    
            var reservationUnderParameter = reservationUnder != null ?
                new ObjectParameter("ReservationUnder", reservationUnder) :
                new ObjectParameter("ReservationUnder", typeof(string));
    
            var contactNumberParameter = contactNumber != null ?
                new ObjectParameter("ContactNumber", contactNumber) :
                new ObjectParameter("ContactNumber", typeof(string));
    
            var reservationNotesParameter = reservationNotes != null ?
                new ObjectParameter("ReservationNotes", reservationNotes) :
                new ObjectParameter("ReservationNotes", typeof(string));
    
            var noOfGuestsParameter = noOfGuests.HasValue ?
                new ObjectParameter("NoOfGuests", noOfGuests) :
                new ObjectParameter("NoOfGuests", typeof(short));
    
            var reservationDateParameter = reservationDate.HasValue ?
                new ObjectParameter("ReservationDate", reservationDate) :
                new ObjectParameter("ReservationDate", typeof(System.DateTime));
    
            var reservationTimeParameter = reservationTime.HasValue ?
                new ObjectParameter("ReservationTime", reservationTime) :
                new ObjectParameter("ReservationTime", typeof(int));
    
            var onlineReservationParameter = onlineReservation.HasValue ?
                new ObjectParameter("OnlineReservation", onlineReservation) :
                new ObjectParameter("OnlineReservation", typeof(bool));
    
            var bDepositPaidParameter = bDepositPaid.HasValue ?
                new ObjectParameter("bDepositPaid", bDepositPaid) :
                new ObjectParameter("bDepositPaid", typeof(bool));
    
            var orderGUIDParameter = orderGUID.HasValue ?
                new ObjectParameter("OrderGUID", orderGUID) :
                new ObjectParameter("OrderGUID", typeof(System.Guid));
    
            var c2PParameter = c2P.HasValue ?
                new ObjectParameter("C2P", c2P) :
                new ObjectParameter("C2P", typeof(bool));
    
            var c2PvalueParameter = c2Pvalue.HasValue ?
                new ObjectParameter("C2Pvalue", c2Pvalue) :
                new ObjectParameter("C2Pvalue", typeof(decimal));
    
            var noOfSeatsParameter = noOfSeats.HasValue ?
                new ObjectParameter("NoOfSeats", noOfSeats) :
                new ObjectParameter("NoOfSeats", typeof(int));
    
            var noOfHighChairsParameter = noOfHighChairs.HasValue ?
                new ObjectParameter("NoOfHighChairs", noOfHighChairs) :
                new ObjectParameter("NoOfHighChairs", typeof(int));
    
            var noOfWheelChairsParameter = noOfWheelChairs.HasValue ?
                new ObjectParameter("NoOfWheelChairs", noOfWheelChairs) :
                new ObjectParameter("NoOfWheelChairs", typeof(int));
    
            var noOfPramsParameter = noOfPrams.HasValue ?
                new ObjectParameter("NoOfPrams", noOfPrams) :
                new ObjectParameter("NoOfPrams", typeof(int));
    
            var telReservationParameter = telReservation.HasValue ?
                new ObjectParameter("TelReservation", telReservation) :
                new ObjectParameter("TelReservation", typeof(bool));
    
            var depositParameter = deposit.HasValue ?
                new ObjectParameter("Deposit", deposit) :
                new ObjectParameter("Deposit", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_MF_AddReservation_V3", foreNameParameter, reservationUnderParameter, contactNumberParameter, reservationNotesParameter, noOfGuestsParameter, reservationDateParameter, reservationTimeParameter, onlineReservationParameter, bDepositPaidParameter, orderGUIDParameter, c2PParameter, c2PvalueParameter, noOfSeatsParameter, noOfHighChairsParameter, noOfWheelChairsParameter, noOfPramsParameter, telReservationParameter, depositParameter, reservationID);
        }
    
        public virtual int usp_MF_AddReservationAdvancedBooking(Nullable<int> day, Nullable<int> advancedBookingTime)
        {
            var dayParameter = day.HasValue ?
                new ObjectParameter("Day", day) :
                new ObjectParameter("Day", typeof(int));
    
            var advancedBookingTimeParameter = advancedBookingTime.HasValue ?
                new ObjectParameter("AdvancedBookingTime", advancedBookingTime) :
                new ObjectParameter("AdvancedBookingTime", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_MF_AddReservationAdvancedBooking", dayParameter, advancedBookingTimeParameter);
        }
    
        public virtual int usp_MF_AddReservationMaxPer15Min(Nullable<int> day, string time, Nullable<int> maxReservations)
        {
            var dayParameter = day.HasValue ?
                new ObjectParameter("Day", day) :
                new ObjectParameter("Day", typeof(int));
    
            var timeParameter = time != null ?
                new ObjectParameter("Time", time) :
                new ObjectParameter("Time", typeof(string));
    
            var maxReservationsParameter = maxReservations.HasValue ?
                new ObjectParameter("MaxReservations", maxReservations) :
                new ObjectParameter("MaxReservations", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_MF_AddReservationMaxPer15Min", dayParameter, timeParameter, maxReservationsParameter);
        }
    
        public virtual int usp_MF_AddReservationName(string forename, string surname, string contactNumber)
        {
            var forenameParameter = forename != null ?
                new ObjectParameter("Forename", forename) :
                new ObjectParameter("Forename", typeof(string));
    
            var surnameParameter = surname != null ?
                new ObjectParameter("Surname", surname) :
                new ObjectParameter("Surname", typeof(string));
    
            var contactNumberParameter = contactNumber != null ?
                new ObjectParameter("ContactNumber", contactNumber) :
                new ObjectParameter("ContactNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_MF_AddReservationName", forenameParameter, surnameParameter, contactNumberParameter);
        }
    
        public virtual int usp_MF_CreateReservationName(string forename, string surname, string contactNumber)
        {
            var forenameParameter = forename != null ?
                new ObjectParameter("Forename", forename) :
                new ObjectParameter("Forename", typeof(string));
    
            var surnameParameter = surname != null ?
                new ObjectParameter("Surname", surname) :
                new ObjectParameter("Surname", typeof(string));
    
            var contactNumberParameter = contactNumber != null ?
                new ObjectParameter("ContactNumber", contactNumber) :
                new ObjectParameter("ContactNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_MF_CreateReservationName", forenameParameter, surnameParameter, contactNumberParameter);
        }
    
        public virtual int usp_MF_DeleteTakeAwayOrder(Nullable<int> takeawayId)
        {
            var takeawayIdParameter = takeawayId.HasValue ?
                new ObjectParameter("TakeawayId", takeawayId) :
                new ObjectParameter("TakeawayId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_MF_DeleteTakeAwayOrder", takeawayIdParameter);
        }
    
        public virtual int usp_MF_GetAvailableReservationTimes(Nullable<System.DateTime> date)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_MF_GetAvailableReservationTimes", dateParameter);
        }
    
        public virtual ObjectResult<usp_MF_GetChangedBarInvoice_Result> usp_MF_GetChangedBarInvoice(Nullable<System.DateTime> date)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_MF_GetChangedBarInvoice_Result>("usp_MF_GetChangedBarInvoice", dateParameter);
        }
    
        public virtual ObjectResult<usp_MF_GetChangedBarInvoiceItem_Result> usp_MF_GetChangedBarInvoiceItem(Nullable<System.DateTime> date)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_MF_GetChangedBarInvoiceItem_Result>("usp_MF_GetChangedBarInvoiceItem", dateParameter);
        }
    
        public virtual ObjectResult<usp_MF_GetChangedOrderParts_Result> usp_MF_GetChangedOrderParts(Nullable<System.DateTime> date)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_MF_GetChangedOrderParts_Result>("usp_MF_GetChangedOrderParts", dateParameter);
        }
    
        public virtual ObjectResult<usp_MF_GetChangedOrderPayments_Result> usp_MF_GetChangedOrderPayments(Nullable<System.DateTime> date)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_MF_GetChangedOrderPayments_Result>("usp_MF_GetChangedOrderPayments", dateParameter);
        }
    
        public virtual ObjectResult<usp_MF_GetChangedOrders_Result> usp_MF_GetChangedOrders(Nullable<System.DateTime> date)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_MF_GetChangedOrders_Result>("usp_MF_GetChangedOrders", dateParameter);
        }
    
        public virtual ObjectResult<usp_MF_GetChangedOrdersAdjustmentAfterBill_Result> usp_MF_GetChangedOrdersAdjustmentAfterBill(Nullable<System.DateTime> date)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_MF_GetChangedOrdersAdjustmentAfterBill_Result>("usp_MF_GetChangedOrdersAdjustmentAfterBill", dateParameter);
        }
    
        public virtual int usp_MF_GetLinkedProducts(Nullable<int> productId)
        {
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_MF_GetLinkedProducts", productIdParameter);
        }
    
        public virtual int usp_MF_GetPrintTakeAwayOrder(Nullable<System.Guid> orderGUID)
        {
            var orderGUIDParameter = orderGUID.HasValue ?
                new ObjectParameter("OrderGUID", orderGUID) :
                new ObjectParameter("OrderGUID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_MF_GetPrintTakeAwayOrder", orderGUIDParameter);
        }
    
        public virtual int usp_MF_GetReservationAdvancedBooking()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_MF_GetReservationAdvancedBooking");
        }
    
        public virtual int usp_MF_GetReservationMaxPer15Min()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_MF_GetReservationMaxPer15Min");
        }
    
        public virtual int usp_MF_GetReservationMaxPer15Min2()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_MF_GetReservationMaxPer15Min2");
        }
    
        public virtual ObjectResult<string> usp_MF_GetTakeAwayId(string start, Nullable<System.DateTime> fromDate)
        {
            var startParameter = start != null ?
                new ObjectParameter("Start", start) :
                new ObjectParameter("Start", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_MF_GetTakeAwayId", startParameter, fromDateParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> usp_MF_GetTotalCardSale(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("usp_MF_GetTotalCardSale", fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> usp_MF_GetTotalCashSale(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("usp_MF_GetTotalCashSale", fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<Nullable<System.Guid>> usp_MF_InsertOnlineOrder()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.Guid>>("usp_MF_InsertOnlineOrder");
        }
    
        public virtual ObjectResult<usp_MF_ShowTakeAwayOrders_Result> usp_MF_ShowTakeAwayOrders(Nullable<System.DateTime> fromDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_MF_ShowTakeAwayOrders_Result>("usp_MF_ShowTakeAwayOrders", fromDateParameter);
        }
    
        public virtual int usp_MF_TakeAwayOrders(Nullable<int> takeAwayId, Nullable<int> addressID, string nAME, Nullable<int> collectionTime, string phone, Nullable<int> hasBeenCollected)
        {
            var takeAwayIdParameter = takeAwayId.HasValue ?
                new ObjectParameter("TakeAwayId", takeAwayId) :
                new ObjectParameter("TakeAwayId", typeof(int));
    
            var addressIDParameter = addressID.HasValue ?
                new ObjectParameter("AddressID", addressID) :
                new ObjectParameter("AddressID", typeof(int));
    
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var collectionTimeParameter = collectionTime.HasValue ?
                new ObjectParameter("CollectionTime", collectionTime) :
                new ObjectParameter("CollectionTime", typeof(int));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var hasBeenCollectedParameter = hasBeenCollected.HasValue ?
                new ObjectParameter("HasBeenCollected", hasBeenCollected) :
                new ObjectParameter("HasBeenCollected", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_MF_TakeAwayOrders", takeAwayIdParameter, addressIDParameter, nAMEParameter, collectionTimeParameter, phoneParameter, hasBeenCollectedParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_MF_UpdateAddress(Nullable<int> addressID, string houseNo, string postCode, string addressFull)
        {
            var addressIDParameter = addressID.HasValue ?
                new ObjectParameter("AddressID", addressID) :
                new ObjectParameter("AddressID", typeof(int));
    
            var houseNoParameter = houseNo != null ?
                new ObjectParameter("HouseNo", houseNo) :
                new ObjectParameter("HouseNo", typeof(string));
    
            var postCodeParameter = postCode != null ?
                new ObjectParameter("PostCode", postCode) :
                new ObjectParameter("PostCode", typeof(string));
    
            var addressFullParameter = addressFull != null ?
                new ObjectParameter("AddressFull", addressFull) :
                new ObjectParameter("AddressFull", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_MF_UpdateAddress", addressIDParameter, houseNoParameter, postCodeParameter, addressFullParameter);
        }
    
        public virtual int usp_MF_UpdateLinkedProducts(Nullable<int> primaryProductId, Nullable<int> secondaryProductId, Nullable<bool> add)
        {
            var primaryProductIdParameter = primaryProductId.HasValue ?
                new ObjectParameter("PrimaryProductId", primaryProductId) :
                new ObjectParameter("PrimaryProductId", typeof(int));
    
            var secondaryProductIdParameter = secondaryProductId.HasValue ?
                new ObjectParameter("SecondaryProductId", secondaryProductId) :
                new ObjectParameter("SecondaryProductId", typeof(int));
    
            var addParameter = add.HasValue ?
                new ObjectParameter("Add", add) :
                new ObjectParameter("Add", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_MF_UpdateLinkedProducts", primaryProductIdParameter, secondaryProductIdParameter, addParameter);
        }
    
        public virtual int usp_MF_UpdateReservation(Nullable<int> reservationId, string foreName, string reservationUnder, string contactNumber, string reservationNotes, Nullable<short> noOfGuests, Nullable<System.DateTime> reservationDate, Nullable<int> reservationTime, Nullable<bool> onlineReservation, Nullable<bool> bDepositPaid, Nullable<System.Guid> orderGUID, Nullable<bool> c2P, Nullable<decimal> c2Pvalue, Nullable<int> noOfSeats, Nullable<int> noOfHighChairs, Nullable<int> noOfWheelChairs, Nullable<int> noOfPrams, string tables)
        {
            var reservationIdParameter = reservationId.HasValue ?
                new ObjectParameter("ReservationId", reservationId) :
                new ObjectParameter("ReservationId", typeof(int));
    
            var foreNameParameter = foreName != null ?
                new ObjectParameter("ForeName", foreName) :
                new ObjectParameter("ForeName", typeof(string));
    
            var reservationUnderParameter = reservationUnder != null ?
                new ObjectParameter("ReservationUnder", reservationUnder) :
                new ObjectParameter("ReservationUnder", typeof(string));
    
            var contactNumberParameter = contactNumber != null ?
                new ObjectParameter("ContactNumber", contactNumber) :
                new ObjectParameter("ContactNumber", typeof(string));
    
            var reservationNotesParameter = reservationNotes != null ?
                new ObjectParameter("ReservationNotes", reservationNotes) :
                new ObjectParameter("ReservationNotes", typeof(string));
    
            var noOfGuestsParameter = noOfGuests.HasValue ?
                new ObjectParameter("NoOfGuests", noOfGuests) :
                new ObjectParameter("NoOfGuests", typeof(short));
    
            var reservationDateParameter = reservationDate.HasValue ?
                new ObjectParameter("ReservationDate", reservationDate) :
                new ObjectParameter("ReservationDate", typeof(System.DateTime));
    
            var reservationTimeParameter = reservationTime.HasValue ?
                new ObjectParameter("ReservationTime", reservationTime) :
                new ObjectParameter("ReservationTime", typeof(int));
    
            var onlineReservationParameter = onlineReservation.HasValue ?
                new ObjectParameter("OnlineReservation", onlineReservation) :
                new ObjectParameter("OnlineReservation", typeof(bool));
    
            var bDepositPaidParameter = bDepositPaid.HasValue ?
                new ObjectParameter("bDepositPaid", bDepositPaid) :
                new ObjectParameter("bDepositPaid", typeof(bool));
    
            var orderGUIDParameter = orderGUID.HasValue ?
                new ObjectParameter("OrderGUID", orderGUID) :
                new ObjectParameter("OrderGUID", typeof(System.Guid));
    
            var c2PParameter = c2P.HasValue ?
                new ObjectParameter("C2P", c2P) :
                new ObjectParameter("C2P", typeof(bool));
    
            var c2PvalueParameter = c2Pvalue.HasValue ?
                new ObjectParameter("C2Pvalue", c2Pvalue) :
                new ObjectParameter("C2Pvalue", typeof(decimal));
    
            var noOfSeatsParameter = noOfSeats.HasValue ?
                new ObjectParameter("NoOfSeats", noOfSeats) :
                new ObjectParameter("NoOfSeats", typeof(int));
    
            var noOfHighChairsParameter = noOfHighChairs.HasValue ?
                new ObjectParameter("NoOfHighChairs", noOfHighChairs) :
                new ObjectParameter("NoOfHighChairs", typeof(int));
    
            var noOfWheelChairsParameter = noOfWheelChairs.HasValue ?
                new ObjectParameter("NoOfWheelChairs", noOfWheelChairs) :
                new ObjectParameter("NoOfWheelChairs", typeof(int));
    
            var noOfPramsParameter = noOfPrams.HasValue ?
                new ObjectParameter("NoOfPrams", noOfPrams) :
                new ObjectParameter("NoOfPrams", typeof(int));
    
            var tablesParameter = tables != null ?
                new ObjectParameter("Tables", tables) :
                new ObjectParameter("Tables", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_MF_UpdateReservation", reservationIdParameter, foreNameParameter, reservationUnderParameter, contactNumberParameter, reservationNotesParameter, noOfGuestsParameter, reservationDateParameter, reservationTimeParameter, onlineReservationParameter, bDepositPaidParameter, orderGUIDParameter, c2PParameter, c2PvalueParameter, noOfSeatsParameter, noOfHighChairsParameter, noOfWheelChairsParameter, noOfPramsParameter, tablesParameter);
        }
    
        public virtual int usp_MF_UpdateTakeAwayOrder(Nullable<int> takeAwayId, Nullable<System.Guid> orderGUID)
        {
            var takeAwayIdParameter = takeAwayId.HasValue ?
                new ObjectParameter("TakeAwayId", takeAwayId) :
                new ObjectParameter("TakeAwayId", typeof(int));
    
            var orderGUIDParameter = orderGUID.HasValue ?
                new ObjectParameter("OrderGUID", orderGUID) :
                new ObjectParameter("OrderGUID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_MF_UpdateTakeAwayOrder", takeAwayIdParameter, orderGUIDParameter);
        }
    
        public virtual int usp_MR_ChangeDailyPin()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_MR_ChangeDailyPin");
        }
    
        public virtual int usp_MR_PrintOrder(Nullable<System.Guid> orderGUID)
        {
            var orderGUIDParameter = orderGUID.HasValue ?
                new ObjectParameter("OrderGUID", orderGUID) :
                new ObjectParameter("OrderGUID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_MR_PrintOrder", orderGUIDParameter);
        }
    
        public virtual int usp_MR_ProcessIPODOrder(Nullable<System.Guid> orderGUID, Nullable<int> tableID, string userCode)
        {
            var orderGUIDParameter = orderGUID.HasValue ?
                new ObjectParameter("OrderGUID", orderGUID) :
                new ObjectParameter("OrderGUID", typeof(System.Guid));
    
            var tableIDParameter = tableID.HasValue ?
                new ObjectParameter("TableID", tableID) :
                new ObjectParameter("TableID", typeof(int));
    
            var userCodeParameter = userCode != null ?
                new ObjectParameter("UserCode", userCode) :
                new ObjectParameter("UserCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_MR_ProcessIPODOrder", orderGUIDParameter, tableIDParameter, userCodeParameter);
        }
    
        public virtual int usp_MR_RecommendIndexes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_MR_RecommendIndexes");
        }
    
        public virtual ObjectResult<usp_MR_TableState_Result> usp_MR_TableState(Nullable<int> tableID)
        {
            var tableIDParameter = tableID.HasValue ?
                new ObjectParameter("TableID", tableID) :
                new ObjectParameter("TableID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_MR_TableState_Result>("usp_MR_TableState", tableIDParameter);
        }
    
        public virtual int usp_NR_AddNewProductWithLinkedItems(Nullable<int> orderPartID, string type, Nullable<int> iProductID, Nullable<int> iUserID, Nullable<int> productOptionID, string guidOrderID)
        {
            var orderPartIDParameter = orderPartID.HasValue ?
                new ObjectParameter("OrderPartID", orderPartID) :
                new ObjectParameter("OrderPartID", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var iProductIDParameter = iProductID.HasValue ?
                new ObjectParameter("iProductID", iProductID) :
                new ObjectParameter("iProductID", typeof(int));
    
            var iUserIDParameter = iUserID.HasValue ?
                new ObjectParameter("iUserID", iUserID) :
                new ObjectParameter("iUserID", typeof(int));
    
            var productOptionIDParameter = productOptionID.HasValue ?
                new ObjectParameter("ProductOptionID", productOptionID) :
                new ObjectParameter("ProductOptionID", typeof(int));
    
            var guidOrderIDParameter = guidOrderID != null ?
                new ObjectParameter("guidOrderID", guidOrderID) :
                new ObjectParameter("guidOrderID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_NR_AddNewProductWithLinkedItems", orderPartIDParameter, typeParameter, iProductIDParameter, iUserIDParameter, productOptionIDParameter, guidOrderIDParameter);
        }
    
        public virtual ObjectResult<usp_NR_checkTableiPod_Result> usp_NR_checkTableiPod(Nullable<int> iTableID, Nullable<System.Guid> orderGUID)
        {
            var iTableIDParameter = iTableID.HasValue ?
                new ObjectParameter("iTableID", iTableID) :
                new ObjectParameter("iTableID", typeof(int));
    
            var orderGUIDParameter = orderGUID.HasValue ?
                new ObjectParameter("OrderGUID", orderGUID) :
                new ObjectParameter("OrderGUID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_NR_checkTableiPod_Result>("usp_NR_checkTableiPod", iTableIDParameter, orderGUIDParameter);
        }
    
        public virtual int usp_NR_GetLinkedProductsInUse(Nullable<int> productId)
        {
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_NR_GetLinkedProductsInUse", productIdParameter);
        }
    
        public virtual ObjectResult<Nullable<System.Guid>> usp_NR_GetOrderGUID(Nullable<int> iTableID)
        {
            var iTableIDParameter = iTableID.HasValue ?
                new ObjectParameter("iTableID", iTableID) :
                new ObjectParameter("iTableID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.Guid>>("usp_NR_GetOrderGUID", iTableIDParameter);
        }
    
        public virtual ObjectResult<string> usp_NR_GetProductName(string productId)
        {
            var productIdParameter = productId != null ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_NR_GetProductName", productIdParameter);
        }
    
        public virtual ObjectResult<string> usp_NR_GetUsername(Nullable<int> userid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_NR_GetUsername", useridParameter);
        }
    
        public virtual int usp_NR_InsertBillForRefilliPod(Nullable<int> userid, string print)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var printParameter = print != null ?
                new ObjectParameter("print", print) :
                new ObjectParameter("print", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_NR_InsertBillForRefilliPod", useridParameter, printParameter);
        }
    
        public virtual ObjectResult<string> usp_NR_InsertRefill(string pid, string size, Nullable<int> userid)
        {
            var pidParameter = pid != null ?
                new ObjectParameter("pid", pid) :
                new ObjectParameter("pid", typeof(string));
    
            var sizeParameter = size != null ?
                new ObjectParameter("size", size) :
                new ObjectParameter("size", typeof(string));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_NR_InsertRefill", pidParameter, sizeParameter, useridParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_NR_InsertRequestBilliPod(Nullable<int> iTableID, Nullable<System.Guid> orderGUID)
        {
            var iTableIDParameter = iTableID.HasValue ?
                new ObjectParameter("iTableID", iTableID) :
                new ObjectParameter("iTableID", typeof(int));
    
            var orderGUIDParameter = orderGUID.HasValue ?
                new ObjectParameter("OrderGUID", orderGUID) :
                new ObjectParameter("OrderGUID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_NR_InsertRequestBilliPod", iTableIDParameter, orderGUIDParameter);
        }
    
        public virtual int usp_NR_LogFunction(string strMessage, string sFunction, string sPage, Nullable<int> sUser)
        {
            var strMessageParameter = strMessage != null ?
                new ObjectParameter("strMessage", strMessage) :
                new ObjectParameter("strMessage", typeof(string));
    
            var sFunctionParameter = sFunction != null ?
                new ObjectParameter("sFunction", sFunction) :
                new ObjectParameter("sFunction", typeof(string));
    
            var sPageParameter = sPage != null ?
                new ObjectParameter("sPage", sPage) :
                new ObjectParameter("sPage", typeof(string));
    
            var sUserParameter = sUser.HasValue ?
                new ObjectParameter("sUser", sUser) :
                new ObjectParameter("sUser", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_NR_LogFunction", strMessageParameter, sFunctionParameter, sPageParameter, sUserParameter);
        }
    
        public virtual ObjectResult<usp_NR_SearchProducts_Result> usp_NR_SearchProducts(string sSearch)
        {
            var sSearchParameter = sSearch != null ?
                new ObjectParameter("sSearch", sSearch) :
                new ObjectParameter("sSearch", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_NR_SearchProducts_Result>("usp_NR_SearchProducts", sSearchParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> usp_NS_AddNewProduct(Nullable<int> iProductID, Nullable<System.Guid> guidOrderID, Nullable<int> iQty)
        {
            var iProductIDParameter = iProductID.HasValue ?
                new ObjectParameter("iProductID", iProductID) :
                new ObjectParameter("iProductID", typeof(int));
    
            var guidOrderIDParameter = guidOrderID.HasValue ?
                new ObjectParameter("guidOrderID", guidOrderID) :
                new ObjectParameter("guidOrderID", typeof(System.Guid));
    
            var iQtyParameter = iQty.HasValue ?
                new ObjectParameter("iQty", iQty) :
                new ObjectParameter("iQty", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("usp_NS_AddNewProduct", iProductIDParameter, guidOrderIDParameter, iQtyParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_NS_AuthenticateUser(Nullable<int> iPassword, Nullable<int> iPin)
        {
            var iPasswordParameter = iPassword.HasValue ?
                new ObjectParameter("iPassword", iPassword) :
                new ObjectParameter("iPassword", typeof(int));
    
            var iPinParameter = iPin.HasValue ?
                new ObjectParameter("iPin", iPin) :
                new ObjectParameter("iPin", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_NS_AuthenticateUser", iPasswordParameter, iPinParameter);
        }
    
        public virtual ObjectResult<usp_NS_AuthenticateUserV2_Result> usp_NS_AuthenticateUserV2(Nullable<int> iPassword, Nullable<int> iPin)
        {
            var iPasswordParameter = iPassword.HasValue ?
                new ObjectParameter("iPassword", iPassword) :
                new ObjectParameter("iPassword", typeof(int));
    
            var iPinParameter = iPin.HasValue ?
                new ObjectParameter("iPin", iPin) :
                new ObjectParameter("iPin", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_NS_AuthenticateUserV2_Result>("usp_NS_AuthenticateUserV2", iPasswordParameter, iPinParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_NS_checkTable(Nullable<System.Guid> orderGUID, Nullable<int> iTableID, Nullable<int> userId)
        {
            var orderGUIDParameter = orderGUID.HasValue ?
                new ObjectParameter("OrderGUID", orderGUID) :
                new ObjectParameter("OrderGUID", typeof(System.Guid));
    
            var iTableIDParameter = iTableID.HasValue ?
                new ObjectParameter("iTableID", iTableID) :
                new ObjectParameter("iTableID", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_NS_checkTable", orderGUIDParameter, iTableIDParameter, userIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_NS_closeTable(Nullable<System.Guid> orderGUID, Nullable<int> iTableID)
        {
            var orderGUIDParameter = orderGUID.HasValue ?
                new ObjectParameter("OrderGUID", orderGUID) :
                new ObjectParameter("OrderGUID", typeof(System.Guid));
    
            var iTableIDParameter = iTableID.HasValue ?
                new ObjectParameter("iTableID", iTableID) :
                new ObjectParameter("iTableID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_NS_closeTable", orderGUIDParameter, iTableIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_NS_closeTable2(Nullable<System.Guid> orderGUID, Nullable<int> iTableID, Nullable<int> userId)
        {
            var orderGUIDParameter = orderGUID.HasValue ?
                new ObjectParameter("OrderGUID", orderGUID) :
                new ObjectParameter("OrderGUID", typeof(System.Guid));
    
            var iTableIDParameter = iTableID.HasValue ?
                new ObjectParameter("iTableID", iTableID) :
                new ObjectParameter("iTableID", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_NS_closeTable2", orderGUIDParameter, iTableIDParameter, userIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_NS_closeTable4(Nullable<System.Guid> orderGUID, Nullable<int> iTableID, Nullable<int> userId)
        {
            var orderGUIDParameter = orderGUID.HasValue ?
                new ObjectParameter("OrderGUID", orderGUID) :
                new ObjectParameter("OrderGUID", typeof(System.Guid));
    
            var iTableIDParameter = iTableID.HasValue ?
                new ObjectParameter("iTableID", iTableID) :
                new ObjectParameter("iTableID", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_NS_closeTable4", orderGUIDParameter, iTableIDParameter, userIdParameter);
        }
    
        public virtual int usp_NS_closeTableAndMove(Nullable<System.Guid> orderGUID, Nullable<int> iTableID, Nullable<int> iExistingTableID, Nullable<int> userId)
        {
            var orderGUIDParameter = orderGUID.HasValue ?
                new ObjectParameter("OrderGUID", orderGUID) :
                new ObjectParameter("OrderGUID", typeof(System.Guid));
    
            var iTableIDParameter = iTableID.HasValue ?
                new ObjectParameter("iTableID", iTableID) :
                new ObjectParameter("iTableID", typeof(int));
    
            var iExistingTableIDParameter = iExistingTableID.HasValue ?
                new ObjectParameter("iExistingTableID", iExistingTableID) :
                new ObjectParameter("iExistingTableID", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_NS_closeTableAndMove", orderGUIDParameter, iTableIDParameter, iExistingTableIDParameter, userIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_NS_closeTableV3(Nullable<System.Guid> orderGUID, Nullable<int> iTableID, Nullable<int> userId)
        {
            var orderGUIDParameter = orderGUID.HasValue ?
                new ObjectParameter("OrderGUID", orderGUID) :
                new ObjectParameter("OrderGUID", typeof(System.Guid));
    
            var iTableIDParameter = iTableID.HasValue ?
                new ObjectParameter("iTableID", iTableID) :
                new ObjectParameter("iTableID", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_NS_closeTableV3", orderGUIDParameter, iTableIDParameter, userIdParameter);
        }
    
        public virtual ObjectResult<usp_NS_FetchTables_Result> usp_NS_FetchTables(Nullable<bool> bEmptyOnly)
        {
            var bEmptyOnlyParameter = bEmptyOnly.HasValue ?
                new ObjectParameter("bEmptyOnly", bEmptyOnly) :
                new ObjectParameter("bEmptyOnly", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_NS_FetchTables_Result>("usp_NS_FetchTables", bEmptyOnlyParameter);
        }
    
        public virtual ObjectResult<usp_NS_GetProductsAndCategories_Result> usp_NS_GetProductsAndCategories(Nullable<bool> bCategories, Nullable<bool> bProduct, Nullable<int> iCategoryID)
        {
            var bCategoriesParameter = bCategories.HasValue ?
                new ObjectParameter("bCategories", bCategories) :
                new ObjectParameter("bCategories", typeof(bool));
    
            var bProductParameter = bProduct.HasValue ?
                new ObjectParameter("bProduct", bProduct) :
                new ObjectParameter("bProduct", typeof(bool));
    
            var iCategoryIDParameter = iCategoryID.HasValue ?
                new ObjectParameter("iCategoryID", iCategoryID) :
                new ObjectParameter("iCategoryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_NS_GetProductsAndCategories_Result>("usp_NS_GetProductsAndCategories", bCategoriesParameter, bProductParameter, iCategoryIDParameter);
        }
    
        public virtual ObjectResult<usp_NS_GetProductsInOrderByTable_Result> usp_NS_GetProductsInOrderByTable(Nullable<int> iTableID)
        {
            var iTableIDParameter = iTableID.HasValue ?
                new ObjectParameter("iTableID", iTableID) :
                new ObjectParameter("iTableID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_NS_GetProductsInOrderByTable_Result>("usp_NS_GetProductsInOrderByTable", iTableIDParameter);
        }
    
        public virtual int usp_NS_MoveTable(Nullable<int> iExistingTableID, Nullable<int> iNewTableID, Nullable<System.Guid> guidOrderID)
        {
            var iExistingTableIDParameter = iExistingTableID.HasValue ?
                new ObjectParameter("iExistingTableID", iExistingTableID) :
                new ObjectParameter("iExistingTableID", typeof(int));
    
            var iNewTableIDParameter = iNewTableID.HasValue ?
                new ObjectParameter("iNewTableID", iNewTableID) :
                new ObjectParameter("iNewTableID", typeof(int));
    
            var guidOrderIDParameter = guidOrderID.HasValue ?
                new ObjectParameter("guidOrderID", guidOrderID) :
                new ObjectParameter("guidOrderID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_NS_MoveTable", iExistingTableIDParameter, iNewTableIDParameter, guidOrderIDParameter);
        }
    
        public virtual int usp_NS_OrderPartTempInsert(Nullable<int> productID, Nullable<System.Guid> orderGUID, Nullable<decimal> total, Nullable<decimal> price, Nullable<int> userID, Nullable<bool> delInd, Nullable<int> qty)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var orderGUIDParameter = orderGUID.HasValue ?
                new ObjectParameter("OrderGUID", orderGUID) :
                new ObjectParameter("OrderGUID", typeof(System.Guid));
    
            var totalParameter = total.HasValue ?
                new ObjectParameter("Total", total) :
                new ObjectParameter("Total", typeof(decimal));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(decimal));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var delIndParameter = delInd.HasValue ?
                new ObjectParameter("DelInd", delInd) :
                new ObjectParameter("DelInd", typeof(bool));
    
            var qtyParameter = qty.HasValue ?
                new ObjectParameter("Qty", qty) :
                new ObjectParameter("Qty", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_NS_OrderPartTempInsert", productIDParameter, orderGUIDParameter, totalParameter, priceParameter, userIDParameter, delIndParameter, qtyParameter);
        }
    
        public virtual int usp_NS_PrintWirelessOrder(Nullable<System.Guid> orderGUID)
        {
            var orderGUIDParameter = orderGUID.HasValue ?
                new ObjectParameter("OrderGUID", orderGUID) :
                new ObjectParameter("OrderGUID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_NS_PrintWirelessOrder", orderGUIDParameter);
        }
    
        public virtual int usp_NS_PrintWirelessOrderv2(Nullable<System.Guid> orderGUID)
        {
            var orderGUIDParameter = orderGUID.HasValue ?
                new ObjectParameter("OrderGUID", orderGUID) :
                new ObjectParameter("OrderGUID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_NS_PrintWirelessOrderv2", orderGUIDParameter);
        }
    
        public virtual int usp_NS_PrintWirelessOrderv3(Nullable<System.Guid> orderGUID, Nullable<int> userId)
        {
            var orderGUIDParameter = orderGUID.HasValue ?
                new ObjectParameter("OrderGUID", orderGUID) :
                new ObjectParameter("OrderGUID", typeof(System.Guid));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_NS_PrintWirelessOrderv3", orderGUIDParameter, userIdParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> usp_NS_UpdateExistingOrderQuantities(Nullable<System.Guid> guidOrderID, Nullable<bool> bAdd, Nullable<int> iProductID, Nullable<bool> bDelInd, Nullable<bool> bByQty, Nullable<int> qty, string linkedIDs)
        {
            var guidOrderIDParameter = guidOrderID.HasValue ?
                new ObjectParameter("guidOrderID", guidOrderID) :
                new ObjectParameter("guidOrderID", typeof(System.Guid));
    
            var bAddParameter = bAdd.HasValue ?
                new ObjectParameter("bAdd", bAdd) :
                new ObjectParameter("bAdd", typeof(bool));
    
            var iProductIDParameter = iProductID.HasValue ?
                new ObjectParameter("iProductID", iProductID) :
                new ObjectParameter("iProductID", typeof(int));
    
            var bDelIndParameter = bDelInd.HasValue ?
                new ObjectParameter("bDelInd", bDelInd) :
                new ObjectParameter("bDelInd", typeof(bool));
    
            var bByQtyParameter = bByQty.HasValue ?
                new ObjectParameter("bByQty", bByQty) :
                new ObjectParameter("bByQty", typeof(bool));
    
            var qtyParameter = qty.HasValue ?
                new ObjectParameter("Qty", qty) :
                new ObjectParameter("Qty", typeof(int));
    
            var linkedIDsParameter = linkedIDs != null ?
                new ObjectParameter("linkedIDs", linkedIDs) :
                new ObjectParameter("linkedIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("usp_NS_UpdateExistingOrderQuantities", guidOrderIDParameter, bAddParameter, iProductIDParameter, bDelIndParameter, bByQtyParameter, qtyParameter, linkedIDsParameter);
        }
    
        public virtual int usp_PK_AddOnlineReservationToTill(string restaurantName, string forename, string surname, string contactNumber, string reservationNotes, Nullable<int> totalNoOfGuests, Nullable<System.DateTime> reservationDate, Nullable<int> reservationTime, Nullable<decimal> deposit, Nullable<int> noOfSeats, Nullable<int> noOfHighChairs, Nullable<int> noOfWheelChairs, Nullable<int> noOfPrams)
        {
            var restaurantNameParameter = restaurantName != null ?
                new ObjectParameter("RestaurantName", restaurantName) :
                new ObjectParameter("RestaurantName", typeof(string));
    
            var forenameParameter = forename != null ?
                new ObjectParameter("Forename", forename) :
                new ObjectParameter("Forename", typeof(string));
    
            var surnameParameter = surname != null ?
                new ObjectParameter("Surname", surname) :
                new ObjectParameter("Surname", typeof(string));
    
            var contactNumberParameter = contactNumber != null ?
                new ObjectParameter("ContactNumber", contactNumber) :
                new ObjectParameter("ContactNumber", typeof(string));
    
            var reservationNotesParameter = reservationNotes != null ?
                new ObjectParameter("ReservationNotes", reservationNotes) :
                new ObjectParameter("ReservationNotes", typeof(string));
    
            var totalNoOfGuestsParameter = totalNoOfGuests.HasValue ?
                new ObjectParameter("TotalNoOfGuests", totalNoOfGuests) :
                new ObjectParameter("TotalNoOfGuests", typeof(int));
    
            var reservationDateParameter = reservationDate.HasValue ?
                new ObjectParameter("ReservationDate", reservationDate) :
                new ObjectParameter("ReservationDate", typeof(System.DateTime));
    
            var reservationTimeParameter = reservationTime.HasValue ?
                new ObjectParameter("ReservationTime", reservationTime) :
                new ObjectParameter("ReservationTime", typeof(int));
    
            var depositParameter = deposit.HasValue ?
                new ObjectParameter("Deposit", deposit) :
                new ObjectParameter("Deposit", typeof(decimal));
    
            var noOfSeatsParameter = noOfSeats.HasValue ?
                new ObjectParameter("NoOfSeats", noOfSeats) :
                new ObjectParameter("NoOfSeats", typeof(int));
    
            var noOfHighChairsParameter = noOfHighChairs.HasValue ?
                new ObjectParameter("NoOfHighChairs", noOfHighChairs) :
                new ObjectParameter("NoOfHighChairs", typeof(int));
    
            var noOfWheelChairsParameter = noOfWheelChairs.HasValue ?
                new ObjectParameter("NoOfWheelChairs", noOfWheelChairs) :
                new ObjectParameter("NoOfWheelChairs", typeof(int));
    
            var noOfPramsParameter = noOfPrams.HasValue ?
                new ObjectParameter("NoOfPrams", noOfPrams) :
                new ObjectParameter("NoOfPrams", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_PK_AddOnlineReservationToTill", restaurantNameParameter, forenameParameter, surnameParameter, contactNumberParameter, reservationNotesParameter, totalNoOfGuestsParameter, reservationDateParameter, reservationTimeParameter, depositParameter, noOfSeatsParameter, noOfHighChairsParameter, noOfWheelChairsParameter, noOfPramsParameter);
        }
    
        public virtual ObjectResult<usp_PK_AlteredItemsHistoryForZ_Result> usp_PK_AlteredItemsHistoryForZ(Nullable<System.DateTime> from, Nullable<System.DateTime> to, string pCName)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("To", to) :
                new ObjectParameter("To", typeof(System.DateTime));
    
            var pCNameParameter = pCName != null ?
                new ObjectParameter("PCName", pCName) :
                new ObjectParameter("PCName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PK_AlteredItemsHistoryForZ_Result>("usp_PK_AlteredItemsHistoryForZ", fromParameter, toParameter, pCNameParameter);
        }
    
        public virtual int usp_PK_CheckIfProductIsAvailableAtThisTime(Nullable<int> productID)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_PK_CheckIfProductIsAvailableAtThisTime", productIDParameter);
        }
    
        public virtual int usp_PK_DeleteRefillTemplateItems(Nullable<int> templateFK)
        {
            var templateFKParameter = templateFK.HasValue ?
                new ObjectParameter("TemplateFK", templateFK) :
                new ObjectParameter("TemplateFK", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_PK_DeleteRefillTemplateItems", templateFKParameter);
        }
    
        public virtual ObjectResult<usp_PK_GetChangedUserSwipeHistory_Result> usp_PK_GetChangedUserSwipeHistory(Nullable<System.DateTime> date)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PK_GetChangedUserSwipeHistory_Result>("usp_PK_GetChangedUserSwipeHistory", dateParameter);
        }
    
        public virtual ObjectResult<usp_PK_LoadRefillTemplateItems_Result> usp_PK_LoadRefillTemplateItems(Nullable<int> templateFK)
        {
            var templateFKParameter = templateFK.HasValue ?
                new ObjectParameter("TemplateFK", templateFK) :
                new ObjectParameter("TemplateFK", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PK_LoadRefillTemplateItems_Result>("usp_PK_LoadRefillTemplateItems", templateFKParameter);
        }
    
        public virtual ObjectResult<usp_PK_NoSalesHistoryForZ_Result> usp_PK_NoSalesHistoryForZ(Nullable<System.DateTime> from, Nullable<System.DateTime> to, string pCName)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("To", to) :
                new ObjectParameter("To", typeof(System.DateTime));
    
            var pCNameParameter = pCName != null ?
                new ObjectParameter("PCName", pCName) :
                new ObjectParameter("PCName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PK_NoSalesHistoryForZ_Result>("usp_PK_NoSalesHistoryForZ", fromParameter, toParameter, pCNameParameter);
        }
    
        public virtual ObjectResult<usp_PK_PaymentHistoryForZ_Result> usp_PK_PaymentHistoryForZ(Nullable<System.DateTime> from, Nullable<System.DateTime> to, string pCName)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("To", to) :
                new ObjectParameter("To", typeof(System.DateTime));
    
            var pCNameParameter = pCName != null ?
                new ObjectParameter("PCName", pCName) :
                new ObjectParameter("PCName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PK_PaymentHistoryForZ_Result>("usp_PK_PaymentHistoryForZ", fromParameter, toParameter, pCNameParameter);
        }
    
        public virtual int usp_PK_PrintToKitchenPrinter(string receipt)
        {
            var receiptParameter = receipt != null ?
                new ObjectParameter("receipt", receipt) :
                new ObjectParameter("receipt", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_PK_PrintToKitchenPrinter", receiptParameter);
        }
    
        public virtual int usp_PK_ProductHistoryForZ(Nullable<System.DateTime> from, Nullable<System.DateTime> to, string pCName)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("To", to) :
                new ObjectParameter("To", typeof(System.DateTime));
    
            var pCNameParameter = pCName != null ?
                new ObjectParameter("PCName", pCName) :
                new ObjectParameter("PCName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_PK_ProductHistoryForZ", fromParameter, toParameter, pCNameParameter);
        }
    
        public virtual int usp_PK_SalesBreakdownForZ(Nullable<System.DateTime> from, Nullable<System.DateTime> to, string pCName)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("To", to) :
                new ObjectParameter("To", typeof(System.DateTime));
    
            var pCNameParameter = pCName != null ?
                new ObjectParameter("PCName", pCName) :
                new ObjectParameter("PCName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_PK_SalesBreakdownForZ", fromParameter, toParameter, pCNameParameter);
        }
    
        public virtual int usp_PK_SalesBreakdownForZUnknownTypes(Nullable<System.DateTime> from, Nullable<System.DateTime> to, string pCName)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("To", to) :
                new ObjectParameter("To", typeof(System.DateTime));
    
            var pCNameParameter = pCName != null ?
                new ObjectParameter("PCName", pCName) :
                new ObjectParameter("PCName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_PK_SalesBreakdownForZUnknownTypes", fromParameter, toParameter, pCNameParameter);
        }
    
        public virtual int usp_PK_SaveRefillTemplateItem(Nullable<int> templateFK, Nullable<int> productFK, Nullable<bool> smallPortion, Nullable<bool> regularPortion, Nullable<bool> largePortion, string options)
        {
            var templateFKParameter = templateFK.HasValue ?
                new ObjectParameter("TemplateFK", templateFK) :
                new ObjectParameter("TemplateFK", typeof(int));
    
            var productFKParameter = productFK.HasValue ?
                new ObjectParameter("ProductFK", productFK) :
                new ObjectParameter("ProductFK", typeof(int));
    
            var smallPortionParameter = smallPortion.HasValue ?
                new ObjectParameter("smallPortion", smallPortion) :
                new ObjectParameter("smallPortion", typeof(bool));
    
            var regularPortionParameter = regularPortion.HasValue ?
                new ObjectParameter("regularPortion", regularPortion) :
                new ObjectParameter("regularPortion", typeof(bool));
    
            var largePortionParameter = largePortion.HasValue ?
                new ObjectParameter("largePortion", largePortion) :
                new ObjectParameter("largePortion", typeof(bool));
    
            var optionsParameter = options != null ?
                new ObjectParameter("Options", options) :
                new ObjectParameter("Options", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_PK_SaveRefillTemplateItem", templateFKParameter, productFKParameter, smallPortionParameter, regularPortionParameter, largePortionParameter, optionsParameter);
        }
    
        public virtual int usp_PK_SaveRefillTemplateItemV2(Nullable<int> templateFK, Nullable<int> productFK, Nullable<bool> smallPortion, Nullable<bool> regularPortion, Nullable<bool> largePortion, string options, Nullable<int> productQty)
        {
            var templateFKParameter = templateFK.HasValue ?
                new ObjectParameter("TemplateFK", templateFK) :
                new ObjectParameter("TemplateFK", typeof(int));
    
            var productFKParameter = productFK.HasValue ?
                new ObjectParameter("ProductFK", productFK) :
                new ObjectParameter("ProductFK", typeof(int));
    
            var smallPortionParameter = smallPortion.HasValue ?
                new ObjectParameter("smallPortion", smallPortion) :
                new ObjectParameter("smallPortion", typeof(bool));
    
            var regularPortionParameter = regularPortion.HasValue ?
                new ObjectParameter("regularPortion", regularPortion) :
                new ObjectParameter("regularPortion", typeof(bool));
    
            var largePortionParameter = largePortion.HasValue ?
                new ObjectParameter("largePortion", largePortion) :
                new ObjectParameter("largePortion", typeof(bool));
    
            var optionsParameter = options != null ?
                new ObjectParameter("Options", options) :
                new ObjectParameter("Options", typeof(string));
    
            var productQtyParameter = productQty.HasValue ?
                new ObjectParameter("ProductQty", productQty) :
                new ObjectParameter("ProductQty", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_PK_SaveRefillTemplateItemV2", templateFKParameter, productFKParameter, smallPortionParameter, regularPortionParameter, largePortionParameter, optionsParameter, productQtyParameter);
        }
    
        public virtual int usp_PK_SaveRefillTemplateName(string templateName, ObjectParameter outID)
        {
            var templateNameParameter = templateName != null ?
                new ObjectParameter("TemplateName", templateName) :
                new ObjectParameter("TemplateName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_PK_SaveRefillTemplateName", templateNameParameter, outID);
        }
    
        public virtual ObjectResult<Nullable<System.Guid>> usp_RD_InsertOrder(Nullable<short> tableID, Nullable<short> tabID, Nullable<int> userID)
        {
            var tableIDParameter = tableID.HasValue ?
                new ObjectParameter("TableID", tableID) :
                new ObjectParameter("TableID", typeof(short));
    
            var tabIDParameter = tabID.HasValue ?
                new ObjectParameter("TabID", tabID) :
                new ObjectParameter("TabID", typeof(short));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.Guid>>("usp_RD_InsertOrder", tableIDParameter, tabIDParameter, userIDParameter);
        }
    
        public virtual ObjectResult<Nullable<System.Guid>> usp_RD_InsertOrder_V1(Nullable<short> tableID, Nullable<short> tabID, Nullable<int> userID)
        {
            var tableIDParameter = tableID.HasValue ?
                new ObjectParameter("TableID", tableID) :
                new ObjectParameter("TableID", typeof(short));
    
            var tabIDParameter = tabID.HasValue ?
                new ObjectParameter("TabID", tabID) :
                new ObjectParameter("TabID", typeof(short));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.Guid>>("usp_RD_InsertOrder_V1", tableIDParameter, tabIDParameter, userIDParameter);
        }
    
        public virtual int usp_SS_AddingMenuitemFromProductList(Nullable<int> menuId, Nullable<int> productID)
        {
            var menuIdParameter = menuId.HasValue ?
                new ObjectParameter("MenuId", menuId) :
                new ObjectParameter("MenuId", typeof(int));
    
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SS_AddingMenuitemFromProductList", menuIdParameter, productIDParameter);
        }
    
        public virtual int usp_SS_AddMenuitems(Nullable<int> menuId, Nullable<int> productID)
        {
            var menuIdParameter = menuId.HasValue ?
                new ObjectParameter("MenuId", menuId) :
                new ObjectParameter("MenuId", typeof(int));
    
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SS_AddMenuitems", menuIdParameter, productIDParameter);
        }
    
        public virtual int usp_SS_AddNewRefund(string payment, Nullable<decimal> grandTotal, Nullable<int> userId, string name, string reason, string pCName, Nullable<decimal> alcoholRefund, Nullable<decimal> foodRefund, Nullable<decimal> totalRefund, ObjectParameter @return)
        {
            var paymentParameter = payment != null ?
                new ObjectParameter("Payment", payment) :
                new ObjectParameter("Payment", typeof(string));
    
            var grandTotalParameter = grandTotal.HasValue ?
                new ObjectParameter("GrandTotal", grandTotal) :
                new ObjectParameter("GrandTotal", typeof(decimal));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var reasonParameter = reason != null ?
                new ObjectParameter("Reason", reason) :
                new ObjectParameter("Reason", typeof(string));
    
            var pCNameParameter = pCName != null ?
                new ObjectParameter("PCName", pCName) :
                new ObjectParameter("PCName", typeof(string));
    
            var alcoholRefundParameter = alcoholRefund.HasValue ?
                new ObjectParameter("AlcoholRefund", alcoholRefund) :
                new ObjectParameter("AlcoholRefund", typeof(decimal));
    
            var foodRefundParameter = foodRefund.HasValue ?
                new ObjectParameter("FoodRefund", foodRefund) :
                new ObjectParameter("FoodRefund", typeof(decimal));
    
            var totalRefundParameter = totalRefund.HasValue ?
                new ObjectParameter("TotalRefund", totalRefund) :
                new ObjectParameter("TotalRefund", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SS_AddNewRefund", paymentParameter, grandTotalParameter, userIdParameter, nameParameter, reasonParameter, pCNameParameter, alcoholRefundParameter, foodRefundParameter, totalRefundParameter, @return);
        }
    
        public virtual int usp_SS_AddOnlineReservationToTill(string restaurantName, string forename, string surname, string contactNumber, string reservationNotes, Nullable<int> totalNoOfGuests, Nullable<System.DateTime> reservationDate, Nullable<int> reservationTime, Nullable<decimal> deposit, Nullable<int> noOfSeats, Nullable<int> noOfHighChairs, Nullable<int> noOfWheelChairs, Nullable<int> noOfPrams, string reservationCode)
        {
            var restaurantNameParameter = restaurantName != null ?
                new ObjectParameter("RestaurantName", restaurantName) :
                new ObjectParameter("RestaurantName", typeof(string));
    
            var forenameParameter = forename != null ?
                new ObjectParameter("Forename", forename) :
                new ObjectParameter("Forename", typeof(string));
    
            var surnameParameter = surname != null ?
                new ObjectParameter("Surname", surname) :
                new ObjectParameter("Surname", typeof(string));
    
            var contactNumberParameter = contactNumber != null ?
                new ObjectParameter("ContactNumber", contactNumber) :
                new ObjectParameter("ContactNumber", typeof(string));
    
            var reservationNotesParameter = reservationNotes != null ?
                new ObjectParameter("ReservationNotes", reservationNotes) :
                new ObjectParameter("ReservationNotes", typeof(string));
    
            var totalNoOfGuestsParameter = totalNoOfGuests.HasValue ?
                new ObjectParameter("TotalNoOfGuests", totalNoOfGuests) :
                new ObjectParameter("TotalNoOfGuests", typeof(int));
    
            var reservationDateParameter = reservationDate.HasValue ?
                new ObjectParameter("ReservationDate", reservationDate) :
                new ObjectParameter("ReservationDate", typeof(System.DateTime));
    
            var reservationTimeParameter = reservationTime.HasValue ?
                new ObjectParameter("ReservationTime", reservationTime) :
                new ObjectParameter("ReservationTime", typeof(int));
    
            var depositParameter = deposit.HasValue ?
                new ObjectParameter("Deposit", deposit) :
                new ObjectParameter("Deposit", typeof(decimal));
    
            var noOfSeatsParameter = noOfSeats.HasValue ?
                new ObjectParameter("NoOfSeats", noOfSeats) :
                new ObjectParameter("NoOfSeats", typeof(int));
    
            var noOfHighChairsParameter = noOfHighChairs.HasValue ?
                new ObjectParameter("NoOfHighChairs", noOfHighChairs) :
                new ObjectParameter("NoOfHighChairs", typeof(int));
    
            var noOfWheelChairsParameter = noOfWheelChairs.HasValue ?
                new ObjectParameter("NoOfWheelChairs", noOfWheelChairs) :
                new ObjectParameter("NoOfWheelChairs", typeof(int));
    
            var noOfPramsParameter = noOfPrams.HasValue ?
                new ObjectParameter("NoOfPrams", noOfPrams) :
                new ObjectParameter("NoOfPrams", typeof(int));
    
            var reservationCodeParameter = reservationCode != null ?
                new ObjectParameter("ReservationCode", reservationCode) :
                new ObjectParameter("ReservationCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SS_AddOnlineReservationToTill", restaurantNameParameter, forenameParameter, surnameParameter, contactNumberParameter, reservationNotesParameter, totalNoOfGuestsParameter, reservationDateParameter, reservationTimeParameter, depositParameter, noOfSeatsParameter, noOfHighChairsParameter, noOfWheelChairsParameter, noOfPramsParameter, reservationCodeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_SS_AddPromotion(Nullable<int> promoId, string promotion, string promoCode, string description, string voucherValue, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<int> maxVouchers, Nullable<bool> tillPromotion, Nullable<bool> archived)
        {
            var promoIdParameter = promoId.HasValue ?
                new ObjectParameter("promoId", promoId) :
                new ObjectParameter("promoId", typeof(int));
    
            var promotionParameter = promotion != null ?
                new ObjectParameter("promotion", promotion) :
                new ObjectParameter("promotion", typeof(string));
    
            var promoCodeParameter = promoCode != null ?
                new ObjectParameter("promoCode", promoCode) :
                new ObjectParameter("promoCode", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("description", description) :
                new ObjectParameter("description", typeof(string));
    
            var voucherValueParameter = voucherValue != null ?
                new ObjectParameter("voucherValue", voucherValue) :
                new ObjectParameter("voucherValue", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var maxVouchersParameter = maxVouchers.HasValue ?
                new ObjectParameter("MaxVouchers", maxVouchers) :
                new ObjectParameter("MaxVouchers", typeof(int));
    
            var tillPromotionParameter = tillPromotion.HasValue ?
                new ObjectParameter("TillPromotion", tillPromotion) :
                new ObjectParameter("TillPromotion", typeof(bool));
    
            var archivedParameter = archived.HasValue ?
                new ObjectParameter("Archived", archived) :
                new ObjectParameter("Archived", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_SS_AddPromotion", promoIdParameter, promotionParameter, promoCodeParameter, descriptionParameter, voucherValueParameter, startDateParameter, endDateParameter, maxVouchersParameter, tillPromotionParameter, archivedParameter);
        }
    
        public virtual int usp_SS_AddSalesRecord(string branchID, string pCName, string cashierName, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string date, Nullable<int> userID, Nullable<decimal> cashSales, Nullable<decimal> cardSales, Nullable<decimal> chequeSales, Nullable<decimal> pDQSales, Nullable<decimal> pDQTips, Nullable<decimal> calculatedCash, Nullable<decimal> attemptedCash, Nullable<decimal> acceptedCash, Nullable<decimal> confirmedCash)
        {
            var branchIDParameter = branchID != null ?
                new ObjectParameter("BranchID", branchID) :
                new ObjectParameter("BranchID", typeof(string));
    
            var pCNameParameter = pCName != null ?
                new ObjectParameter("PCName", pCName) :
                new ObjectParameter("PCName", typeof(string));
    
            var cashierNameParameter = cashierName != null ?
                new ObjectParameter("CashierName", cashierName) :
                new ObjectParameter("CashierName", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var dateParameter = date != null ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var cashSalesParameter = cashSales.HasValue ?
                new ObjectParameter("CashSales", cashSales) :
                new ObjectParameter("CashSales", typeof(decimal));
    
            var cardSalesParameter = cardSales.HasValue ?
                new ObjectParameter("CardSales", cardSales) :
                new ObjectParameter("CardSales", typeof(decimal));
    
            var chequeSalesParameter = chequeSales.HasValue ?
                new ObjectParameter("ChequeSales", chequeSales) :
                new ObjectParameter("ChequeSales", typeof(decimal));
    
            var pDQSalesParameter = pDQSales.HasValue ?
                new ObjectParameter("PDQSales", pDQSales) :
                new ObjectParameter("PDQSales", typeof(decimal));
    
            var pDQTipsParameter = pDQTips.HasValue ?
                new ObjectParameter("PDQTips", pDQTips) :
                new ObjectParameter("PDQTips", typeof(decimal));
    
            var calculatedCashParameter = calculatedCash.HasValue ?
                new ObjectParameter("CalculatedCash", calculatedCash) :
                new ObjectParameter("CalculatedCash", typeof(decimal));
    
            var attemptedCashParameter = attemptedCash.HasValue ?
                new ObjectParameter("AttemptedCash", attemptedCash) :
                new ObjectParameter("AttemptedCash", typeof(decimal));
    
            var acceptedCashParameter = acceptedCash.HasValue ?
                new ObjectParameter("AcceptedCash", acceptedCash) :
                new ObjectParameter("AcceptedCash", typeof(decimal));
    
            var confirmedCashParameter = confirmedCash.HasValue ?
                new ObjectParameter("ConfirmedCash", confirmedCash) :
                new ObjectParameter("ConfirmedCash", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SS_AddSalesRecord", branchIDParameter, pCNameParameter, cashierNameParameter, fromDateParameter, toDateParameter, dateParameter, userIDParameter, cashSalesParameter, cardSalesParameter, chequeSalesParameter, pDQSalesParameter, pDQTipsParameter, calculatedCashParameter, attemptedCashParameter, acceptedCashParameter, confirmedCashParameter);
        }
    
        public virtual int usp_SS_AddSalesRecordV1(string branchID, string pCName, string cashierName, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string date, Nullable<int> userID, Nullable<decimal> cashSales, Nullable<decimal> cardSales, Nullable<decimal> chequeSales, Nullable<decimal> pDQSales, Nullable<decimal> pDQTips, Nullable<decimal> calculatedCash, Nullable<decimal> attemptedCash, Nullable<decimal> acceptedCash, Nullable<decimal> confirmedCash, Nullable<decimal> cash5, Nullable<decimal> cash20, Nullable<decimal> card5, Nullable<decimal> card20, Nullable<decimal> mP5, Nullable<decimal> mP20, Nullable<decimal> mPTips, Nullable<decimal> cardServiceCharge, Nullable<decimal> cashServiceCharge, Nullable<decimal> mPServiceCharge)
        {
            var branchIDParameter = branchID != null ?
                new ObjectParameter("BranchID", branchID) :
                new ObjectParameter("BranchID", typeof(string));
    
            var pCNameParameter = pCName != null ?
                new ObjectParameter("PCName", pCName) :
                new ObjectParameter("PCName", typeof(string));
    
            var cashierNameParameter = cashierName != null ?
                new ObjectParameter("CashierName", cashierName) :
                new ObjectParameter("CashierName", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var dateParameter = date != null ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var cashSalesParameter = cashSales.HasValue ?
                new ObjectParameter("CashSales", cashSales) :
                new ObjectParameter("CashSales", typeof(decimal));
    
            var cardSalesParameter = cardSales.HasValue ?
                new ObjectParameter("CardSales", cardSales) :
                new ObjectParameter("CardSales", typeof(decimal));
    
            var chequeSalesParameter = chequeSales.HasValue ?
                new ObjectParameter("ChequeSales", chequeSales) :
                new ObjectParameter("ChequeSales", typeof(decimal));
    
            var pDQSalesParameter = pDQSales.HasValue ?
                new ObjectParameter("PDQSales", pDQSales) :
                new ObjectParameter("PDQSales", typeof(decimal));
    
            var pDQTipsParameter = pDQTips.HasValue ?
                new ObjectParameter("PDQTips", pDQTips) :
                new ObjectParameter("PDQTips", typeof(decimal));
    
            var calculatedCashParameter = calculatedCash.HasValue ?
                new ObjectParameter("CalculatedCash", calculatedCash) :
                new ObjectParameter("CalculatedCash", typeof(decimal));
    
            var attemptedCashParameter = attemptedCash.HasValue ?
                new ObjectParameter("AttemptedCash", attemptedCash) :
                new ObjectParameter("AttemptedCash", typeof(decimal));
    
            var acceptedCashParameter = acceptedCash.HasValue ?
                new ObjectParameter("AcceptedCash", acceptedCash) :
                new ObjectParameter("AcceptedCash", typeof(decimal));
    
            var confirmedCashParameter = confirmedCash.HasValue ?
                new ObjectParameter("ConfirmedCash", confirmedCash) :
                new ObjectParameter("ConfirmedCash", typeof(decimal));
    
            var cash5Parameter = cash5.HasValue ?
                new ObjectParameter("Cash5", cash5) :
                new ObjectParameter("Cash5", typeof(decimal));
    
            var cash20Parameter = cash20.HasValue ?
                new ObjectParameter("Cash20", cash20) :
                new ObjectParameter("Cash20", typeof(decimal));
    
            var card5Parameter = card5.HasValue ?
                new ObjectParameter("Card5", card5) :
                new ObjectParameter("Card5", typeof(decimal));
    
            var card20Parameter = card20.HasValue ?
                new ObjectParameter("Card20", card20) :
                new ObjectParameter("Card20", typeof(decimal));
    
            var mP5Parameter = mP5.HasValue ?
                new ObjectParameter("MP5", mP5) :
                new ObjectParameter("MP5", typeof(decimal));
    
            var mP20Parameter = mP20.HasValue ?
                new ObjectParameter("MP20", mP20) :
                new ObjectParameter("MP20", typeof(decimal));
    
            var mPTipsParameter = mPTips.HasValue ?
                new ObjectParameter("MPTips", mPTips) :
                new ObjectParameter("MPTips", typeof(decimal));
    
            var cardServiceChargeParameter = cardServiceCharge.HasValue ?
                new ObjectParameter("CardServiceCharge", cardServiceCharge) :
                new ObjectParameter("CardServiceCharge", typeof(decimal));
    
            var cashServiceChargeParameter = cashServiceCharge.HasValue ?
                new ObjectParameter("CashServiceCharge", cashServiceCharge) :
                new ObjectParameter("CashServiceCharge", typeof(decimal));
    
            var mPServiceChargeParameter = mPServiceCharge.HasValue ?
                new ObjectParameter("MPServiceCharge", mPServiceCharge) :
                new ObjectParameter("MPServiceCharge", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SS_AddSalesRecordV1", branchIDParameter, pCNameParameter, cashierNameParameter, fromDateParameter, toDateParameter, dateParameter, userIDParameter, cashSalesParameter, cardSalesParameter, chequeSalesParameter, pDQSalesParameter, pDQTipsParameter, calculatedCashParameter, attemptedCashParameter, acceptedCashParameter, confirmedCashParameter, cash5Parameter, cash20Parameter, card5Parameter, card20Parameter, mP5Parameter, mP20Parameter, mPTipsParameter, cardServiceChargeParameter, cashServiceChargeParameter, mPServiceChargeParameter);
        }
    
        public virtual int usp_SS_AllocateOnlineReservation(string foreName, string surName, string mobile, Nullable<System.Guid> orderGUID, string uniqueCode, ObjectParameter reservationID)
        {
            var foreNameParameter = foreName != null ?
                new ObjectParameter("ForeName", foreName) :
                new ObjectParameter("ForeName", typeof(string));
    
            var surNameParameter = surName != null ?
                new ObjectParameter("SurName", surName) :
                new ObjectParameter("SurName", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var orderGUIDParameter = orderGUID.HasValue ?
                new ObjectParameter("OrderGUID", orderGUID) :
                new ObjectParameter("OrderGUID", typeof(System.Guid));
    
            var uniqueCodeParameter = uniqueCode != null ?
                new ObjectParameter("UniqueCode", uniqueCode) :
                new ObjectParameter("UniqueCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SS_AllocateOnlineReservation", foreNameParameter, surNameParameter, mobileParameter, orderGUIDParameter, uniqueCodeParameter, reservationID);
        }
    
        public virtual int usp_SS_AllocateReservation(Nullable<int> reservationID, Nullable<System.Guid> orderGUID, ObjectParameter iOut)
        {
            var reservationIDParameter = reservationID.HasValue ?
                new ObjectParameter("ReservationID", reservationID) :
                new ObjectParameter("ReservationID", typeof(int));
    
            var orderGUIDParameter = orderGUID.HasValue ?
                new ObjectParameter("OrderGUID", orderGUID) :
                new ObjectParameter("OrderGUID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SS_AllocateReservation", reservationIDParameter, orderGUIDParameter, iOut);
        }
    
        public virtual int usp_SS_CollectTakeAwayOrder(Nullable<int> takeawayId)
        {
            var takeawayIdParameter = takeawayId.HasValue ?
                new ObjectParameter("TakeawayId", takeawayId) :
                new ObjectParameter("TakeawayId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SS_CollectTakeAwayOrder", takeawayIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_SS_CreateOrderPart(Nullable<System.Guid> orderGUID, Nullable<int> productID, Nullable<int> qty, Nullable<decimal> price, Nullable<decimal> total, Nullable<int> userID)
        {
            var orderGUIDParameter = orderGUID.HasValue ?
                new ObjectParameter("OrderGUID", orderGUID) :
                new ObjectParameter("OrderGUID", typeof(System.Guid));
    
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var qtyParameter = qty.HasValue ?
                new ObjectParameter("Qty", qty) :
                new ObjectParameter("Qty", typeof(int));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(decimal));
    
            var totalParameter = total.HasValue ?
                new ObjectParameter("Total", total) :
                new ObjectParameter("Total", typeof(decimal));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_SS_CreateOrderPart", orderGUIDParameter, productIDParameter, qtyParameter, priceParameter, totalParameter, userIDParameter);
        }
    
        public virtual int usp_SS_CreateOrderPartOption(Nullable<System.Guid> orderGUID, Nullable<int> orderPartId, Nullable<int> productOptionID, Nullable<int> userID)
        {
            var orderGUIDParameter = orderGUID.HasValue ?
                new ObjectParameter("OrderGUID", orderGUID) :
                new ObjectParameter("OrderGUID", typeof(System.Guid));
    
            var orderPartIdParameter = orderPartId.HasValue ?
                new ObjectParameter("OrderPartId", orderPartId) :
                new ObjectParameter("OrderPartId", typeof(int));
    
            var productOptionIDParameter = productOptionID.HasValue ?
                new ObjectParameter("ProductOptionID", productOptionID) :
                new ObjectParameter("ProductOptionID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SS_CreateOrderPartOption", orderGUIDParameter, orderPartIdParameter, productOptionIDParameter, userIDParameter);
        }
    
        public virtual int usp_SS_CreateTakeAwayOrder(Nullable<int> addressID, string nAME, Nullable<int> collectionTime, string phone, Nullable<int> hasBeenCollected, Nullable<System.Guid> orderGUID, string orderNumber, Nullable<bool> bDelivery, Nullable<bool> bTakeaway, Nullable<bool> bPaid, Nullable<decimal> paymentValue, Nullable<decimal> deliveryCharges)
        {
            var addressIDParameter = addressID.HasValue ?
                new ObjectParameter("AddressID", addressID) :
                new ObjectParameter("AddressID", typeof(int));
    
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var collectionTimeParameter = collectionTime.HasValue ?
                new ObjectParameter("CollectionTime", collectionTime) :
                new ObjectParameter("CollectionTime", typeof(int));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var hasBeenCollectedParameter = hasBeenCollected.HasValue ?
                new ObjectParameter("HasBeenCollected", hasBeenCollected) :
                new ObjectParameter("HasBeenCollected", typeof(int));
    
            var orderGUIDParameter = orderGUID.HasValue ?
                new ObjectParameter("OrderGUID", orderGUID) :
                new ObjectParameter("OrderGUID", typeof(System.Guid));
    
            var orderNumberParameter = orderNumber != null ?
                new ObjectParameter("OrderNumber", orderNumber) :
                new ObjectParameter("OrderNumber", typeof(string));
    
            var bDeliveryParameter = bDelivery.HasValue ?
                new ObjectParameter("bDelivery", bDelivery) :
                new ObjectParameter("bDelivery", typeof(bool));
    
            var bTakeawayParameter = bTakeaway.HasValue ?
                new ObjectParameter("bTakeaway", bTakeaway) :
                new ObjectParameter("bTakeaway", typeof(bool));
    
            var bPaidParameter = bPaid.HasValue ?
                new ObjectParameter("bPaid", bPaid) :
                new ObjectParameter("bPaid", typeof(bool));
    
            var paymentValueParameter = paymentValue.HasValue ?
                new ObjectParameter("PaymentValue", paymentValue) :
                new ObjectParameter("PaymentValue", typeof(decimal));
    
            var deliveryChargesParameter = deliveryCharges.HasValue ?
                new ObjectParameter("DeliveryCharges", deliveryCharges) :
                new ObjectParameter("DeliveryCharges", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SS_CreateTakeAwayOrder", addressIDParameter, nAMEParameter, collectionTimeParameter, phoneParameter, hasBeenCollectedParameter, orderGUIDParameter, orderNumberParameter, bDeliveryParameter, bTakeawayParameter, bPaidParameter, paymentValueParameter, deliveryChargesParameter);
        }
    
        public virtual int usp_SS_CreateVoucherCode(ObjectParameter code)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SS_CreateVoucherCode", code);
        }
    
        public virtual int usp_SS_DeleteMenuitems(Nullable<int> menuId, Nullable<int> productID)
        {
            var menuIdParameter = menuId.HasValue ?
                new ObjectParameter("MenuId", menuId) :
                new ObjectParameter("MenuId", typeof(int));
    
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SS_DeleteMenuitems", menuIdParameter, productIDParameter);
        }
    
        public virtual int usp_SS_DeleteProduct(Nullable<int> productId)
        {
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SS_DeleteProduct", productIdParameter);
        }
    
        public virtual int usp_SS_DeletePromotion(Nullable<int> promoId)
        {
            var promoIdParameter = promoId.HasValue ?
                new ObjectParameter("promoId", promoId) :
                new ObjectParameter("promoId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SS_DeletePromotion", promoIdParameter);
        }
    
        public virtual int usp_SS_DeleteStockTemplateProducts(Nullable<int> templateID)
        {
            var templateIDParameter = templateID.HasValue ?
                new ObjectParameter("TemplateID", templateID) :
                new ObjectParameter("TemplateID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SS_DeleteStockTemplateProducts", templateIDParameter);
        }
    
        public virtual ObjectResult<usp_SS_GetDeletedItemsData_Result> usp_SS_GetDeletedItemsData()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SS_GetDeletedItemsData_Result>("usp_SS_GetDeletedItemsData");
        }
    
        public virtual ObjectResult<usp_SS_GetDishOrders_Result> usp_SS_GetDishOrders()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SS_GetDishOrders_Result>("usp_SS_GetDishOrders");
        }
    
        public virtual ObjectResult<usp_SS_GetDrinksSoldData_Result> usp_SS_GetDrinksSoldData()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SS_GetDrinksSoldData_Result>("usp_SS_GetDrinksSoldData");
        }
    
        public virtual ObjectResult<usp_SS_GetDrinksTargetData_Result> usp_SS_GetDrinksTargetData()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SS_GetDrinksTargetData_Result>("usp_SS_GetDrinksTargetData");
        }
    
        public virtual ObjectResult<usp_SS_GetItemsServeData_Result> usp_SS_GetItemsServeData()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SS_GetItemsServeData_Result>("usp_SS_GetItemsServeData");
        }
    
        public virtual int usp_SS_GetLinkedProducts(Nullable<int> productId)
        {
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SS_GetLinkedProducts", productIdParameter);
        }
    
        public virtual ObjectResult<usp_SS_GetLoginData_Result> usp_SS_GetLoginData()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SS_GetLoginData_Result>("usp_SS_GetLoginData");
        }
    
        public virtual ObjectResult<usp_SS_GetOrderedItemsTime_Result> usp_SS_GetOrderedItemsTime()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SS_GetOrderedItemsTime_Result>("usp_SS_GetOrderedItemsTime");
        }
    
        public virtual ObjectResult<usp_SS_GetOrderPartsData_Result> usp_SS_GetOrderPartsData(Nullable<System.Guid> orderGUID)
        {
            var orderGUIDParameter = orderGUID.HasValue ?
                new ObjectParameter("OrderGUID", orderGUID) :
                new ObjectParameter("OrderGUID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SS_GetOrderPartsData_Result>("usp_SS_GetOrderPartsData", orderGUIDParameter);
        }
    
        public virtual ObjectResult<usp_SS_GetOrderPaymentsData_Result> usp_SS_GetOrderPaymentsData(Nullable<System.Guid> orderGUID)
        {
            var orderGUIDParameter = orderGUID.HasValue ?
                new ObjectParameter("OrderGUID", orderGUID) :
                new ObjectParameter("OrderGUID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SS_GetOrderPaymentsData_Result>("usp_SS_GetOrderPaymentsData", orderGUIDParameter);
        }
    
        public virtual ObjectResult<usp_SS_GetOrdersData_Result> usp_SS_GetOrdersData(Nullable<System.DateTime> date)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SS_GetOrdersData_Result>("usp_SS_GetOrdersData", dateParameter);
        }
    
        public virtual ObjectResult<usp_SS_GetOrderServeTimeData_Result> usp_SS_GetOrderServeTimeData()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SS_GetOrderServeTimeData_Result>("usp_SS_GetOrderServeTimeData");
        }
    
        public virtual ObjectResult<usp_SS_GetReceivedStockItemsTILL_Result> usp_SS_GetReceivedStockItemsTILL(Nullable<int> purchaseOrderNumber)
        {
            var purchaseOrderNumberParameter = purchaseOrderNumber.HasValue ?
                new ObjectParameter("PurchaseOrderNumber", purchaseOrderNumber) :
                new ObjectParameter("PurchaseOrderNumber", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SS_GetReceivedStockItemsTILL_Result>("usp_SS_GetReceivedStockItemsTILL", purchaseOrderNumberParameter);
        }
    
        public virtual ObjectResult<usp_SS_GetReceivedStockTILL_Result> usp_SS_GetReceivedStockTILL(Nullable<int> purchaseOrderNumber)
        {
            var purchaseOrderNumberParameter = purchaseOrderNumber.HasValue ?
                new ObjectParameter("PurchaseOrderNumber", purchaseOrderNumber) :
                new ObjectParameter("PurchaseOrderNumber", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SS_GetReceivedStockTILL_Result>("usp_SS_GetReceivedStockTILL", purchaseOrderNumberParameter);
        }
    
        public virtual ObjectResult<usp_SS_GetRedeemedProducts_Result> usp_SS_GetRedeemedProducts()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SS_GetRedeemedProducts_Result>("usp_SS_GetRedeemedProducts");
        }
    
        public virtual ObjectResult<usp_SS_GetRefillItemsData_Result> usp_SS_GetRefillItemsData()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SS_GetRefillItemsData_Result>("usp_SS_GetRefillItemsData");
        }
    
        public virtual ObjectResult<usp_SS_GetRefundData_Result> usp_SS_GetRefundData()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SS_GetRefundData_Result>("usp_SS_GetRefundData");
        }
    
        public virtual ObjectResult<usp_SS_GetRestaurantDetails_Result> usp_SS_GetRestaurantDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SS_GetRestaurantDetails_Result>("usp_SS_GetRestaurantDetails");
        }
    
        public virtual ObjectResult<usp_SS_GetTargetsData_Result> usp_SS_GetTargetsData()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SS_GetTargetsData_Result>("usp_SS_GetTargetsData");
        }
    
        public virtual ObjectResult<usp_SS_GetToiletCheckData_Result> usp_SS_GetToiletCheckData()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SS_GetToiletCheckData_Result>("usp_SS_GetToiletCheckData");
        }
    
        public virtual ObjectResult<usp_SS_GetUnclaimedProductsData_Result> usp_SS_GetUnclaimedProductsData()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SS_GetUnclaimedProductsData_Result>("usp_SS_GetUnclaimedProductsData");
        }
    
        public virtual ObjectResult<usp_SS_GetVoucherDetails_Result> usp_SS_GetVoucherDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SS_GetVoucherDetails_Result>("usp_SS_GetVoucherDetails");
        }
    
        public virtual int usp_SS_InsertBoxGroup(Nullable<int> boxGroupID, string groupName, Nullable<int> itemCount, Nullable<bool> delInd, Nullable<int> productId, string type)
        {
            var boxGroupIDParameter = boxGroupID.HasValue ?
                new ObjectParameter("BoxGroupID", boxGroupID) :
                new ObjectParameter("BoxGroupID", typeof(int));
    
            var groupNameParameter = groupName != null ?
                new ObjectParameter("GroupName", groupName) :
                new ObjectParameter("GroupName", typeof(string));
    
            var itemCountParameter = itemCount.HasValue ?
                new ObjectParameter("ItemCount", itemCount) :
                new ObjectParameter("ItemCount", typeof(int));
    
            var delIndParameter = delInd.HasValue ?
                new ObjectParameter("DelInd", delInd) :
                new ObjectParameter("DelInd", typeof(bool));
    
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SS_InsertBoxGroup", boxGroupIDParameter, groupNameParameter, itemCountParameter, delIndParameter, productIdParameter, typeParameter);
        }
    
        public virtual int usp_SS_InsertBoxGroupProduct(Nullable<int> boxGroupId, Nullable<int> linkId, Nullable<int> productId, Nullable<bool> delInd, string type)
        {
            var boxGroupIdParameter = boxGroupId.HasValue ?
                new ObjectParameter("BoxGroupId", boxGroupId) :
                new ObjectParameter("BoxGroupId", typeof(int));
    
            var linkIdParameter = linkId.HasValue ?
                new ObjectParameter("LinkId", linkId) :
                new ObjectParameter("LinkId", typeof(int));
    
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            var delIndParameter = delInd.HasValue ?
                new ObjectParameter("DelInd", delInd) :
                new ObjectParameter("DelInd", typeof(bool));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SS_InsertBoxGroupProduct", boxGroupIdParameter, linkIdParameter, productIdParameter, delIndParameter, typeParameter);
        }
    
        public virtual int usp_SS_InsertDrinksSold(Nullable<System.Guid> oid)
        {
            var oidParameter = oid.HasValue ?
                new ObjectParameter("Oid", oid) :
                new ObjectParameter("Oid", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SS_InsertDrinksSold", oidParameter);
        }
    
        public virtual int usp_SS_InsertNewMenu(Nullable<int> menuId, string menuName, string menuDescription, Nullable<int> sortOrder)
        {
            var menuIdParameter = menuId.HasValue ?
                new ObjectParameter("MenuId", menuId) :
                new ObjectParameter("MenuId", typeof(int));
    
            var menuNameParameter = menuName != null ?
                new ObjectParameter("MenuName", menuName) :
                new ObjectParameter("MenuName", typeof(string));
    
            var menuDescriptionParameter = menuDescription != null ?
                new ObjectParameter("MenuDescription", menuDescription) :
                new ObjectParameter("MenuDescription", typeof(string));
    
            var sortOrderParameter = sortOrder.HasValue ?
                new ObjectParameter("SortOrder", sortOrder) :
                new ObjectParameter("SortOrder", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SS_InsertNewMenu", menuIdParameter, menuNameParameter, menuDescriptionParameter, sortOrderParameter);
        }
    
        public virtual int usp_SS_InsertNewProduct(Nullable<int> productId, Nullable<int> productCode, Nullable<int> productGroupID, Nullable<decimal> price, string description, string chineseName, Nullable<bool> customisePrice, string foreColour, string backColour, Nullable<bool> foodRefil, Nullable<int> sortOrder, Nullable<bool> isTakeAway, Nullable<int> fridgeQty, Nullable<int> productTypeID, Nullable<bool> isFridgeItem, Nullable<bool> isVegetarian, Nullable<int> isSpicy, Nullable<bool> isGlutenFree, string imageName, string type, string vMenuDescription, string vAllergens, string englishName, Nullable<decimal> vat, Nullable<decimal> costPrice, Nullable<int> rewardPoints, Nullable<int> redemptionPoints, Nullable<System.DateTime> rewardStartDate, Nullable<System.DateTime> rewardEndDate, Nullable<System.DateTime> redeemStartDate, Nullable<System.DateTime> redeemEndDate, Nullable<int> redeemValidDays, ObjectParameter newId)
        {
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            var productCodeParameter = productCode.HasValue ?
                new ObjectParameter("ProductCode", productCode) :
                new ObjectParameter("ProductCode", typeof(int));
    
            var productGroupIDParameter = productGroupID.HasValue ?
                new ObjectParameter("ProductGroupID", productGroupID) :
                new ObjectParameter("ProductGroupID", typeof(int));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(decimal));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var chineseNameParameter = chineseName != null ?
                new ObjectParameter("ChineseName", chineseName) :
                new ObjectParameter("ChineseName", typeof(string));
    
            var customisePriceParameter = customisePrice.HasValue ?
                new ObjectParameter("CustomisePrice", customisePrice) :
                new ObjectParameter("CustomisePrice", typeof(bool));
    
            var foreColourParameter = foreColour != null ?
                new ObjectParameter("ForeColour", foreColour) :
                new ObjectParameter("ForeColour", typeof(string));
    
            var backColourParameter = backColour != null ?
                new ObjectParameter("BackColour", backColour) :
                new ObjectParameter("BackColour", typeof(string));
    
            var foodRefilParameter = foodRefil.HasValue ?
                new ObjectParameter("FoodRefil", foodRefil) :
                new ObjectParameter("FoodRefil", typeof(bool));
    
            var sortOrderParameter = sortOrder.HasValue ?
                new ObjectParameter("SortOrder", sortOrder) :
                new ObjectParameter("SortOrder", typeof(int));
    
            var isTakeAwayParameter = isTakeAway.HasValue ?
                new ObjectParameter("IsTakeAway", isTakeAway) :
                new ObjectParameter("IsTakeAway", typeof(bool));
    
            var fridgeQtyParameter = fridgeQty.HasValue ?
                new ObjectParameter("FridgeQty", fridgeQty) :
                new ObjectParameter("FridgeQty", typeof(int));
    
            var productTypeIDParameter = productTypeID.HasValue ?
                new ObjectParameter("ProductTypeID", productTypeID) :
                new ObjectParameter("ProductTypeID", typeof(int));
    
            var isFridgeItemParameter = isFridgeItem.HasValue ?
                new ObjectParameter("IsFridgeItem", isFridgeItem) :
                new ObjectParameter("IsFridgeItem", typeof(bool));
    
            var isVegetarianParameter = isVegetarian.HasValue ?
                new ObjectParameter("IsVegetarian", isVegetarian) :
                new ObjectParameter("IsVegetarian", typeof(bool));
    
            var isSpicyParameter = isSpicy.HasValue ?
                new ObjectParameter("IsSpicy", isSpicy) :
                new ObjectParameter("IsSpicy", typeof(int));
    
            var isGlutenFreeParameter = isGlutenFree.HasValue ?
                new ObjectParameter("IsGlutenFree", isGlutenFree) :
                new ObjectParameter("IsGlutenFree", typeof(bool));
    
            var imageNameParameter = imageName != null ?
                new ObjectParameter("ImageName", imageName) :
                new ObjectParameter("ImageName", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var vMenuDescriptionParameter = vMenuDescription != null ?
                new ObjectParameter("vMenuDescription", vMenuDescription) :
                new ObjectParameter("vMenuDescription", typeof(string));
    
            var vAllergensParameter = vAllergens != null ?
                new ObjectParameter("vAllergens", vAllergens) :
                new ObjectParameter("vAllergens", typeof(string));
    
            var englishNameParameter = englishName != null ?
                new ObjectParameter("EnglishName", englishName) :
                new ObjectParameter("EnglishName", typeof(string));
    
            var vatParameter = vat.HasValue ?
                new ObjectParameter("Vat", vat) :
                new ObjectParameter("Vat", typeof(decimal));
    
            var costPriceParameter = costPrice.HasValue ?
                new ObjectParameter("CostPrice", costPrice) :
                new ObjectParameter("CostPrice", typeof(decimal));
    
            var rewardPointsParameter = rewardPoints.HasValue ?
                new ObjectParameter("RewardPoints", rewardPoints) :
                new ObjectParameter("RewardPoints", typeof(int));
    
            var redemptionPointsParameter = redemptionPoints.HasValue ?
                new ObjectParameter("RedemptionPoints", redemptionPoints) :
                new ObjectParameter("RedemptionPoints", typeof(int));
    
            var rewardStartDateParameter = rewardStartDate.HasValue ?
                new ObjectParameter("RewardStartDate", rewardStartDate) :
                new ObjectParameter("RewardStartDate", typeof(System.DateTime));
    
            var rewardEndDateParameter = rewardEndDate.HasValue ?
                new ObjectParameter("RewardEndDate", rewardEndDate) :
                new ObjectParameter("RewardEndDate", typeof(System.DateTime));
    
            var redeemStartDateParameter = redeemStartDate.HasValue ?
                new ObjectParameter("RedeemStartDate", redeemStartDate) :
                new ObjectParameter("RedeemStartDate", typeof(System.DateTime));
    
            var redeemEndDateParameter = redeemEndDate.HasValue ?
                new ObjectParameter("RedeemEndDate", redeemEndDate) :
                new ObjectParameter("RedeemEndDate", typeof(System.DateTime));
    
            var redeemValidDaysParameter = redeemValidDays.HasValue ?
                new ObjectParameter("RedeemValidDays", redeemValidDays) :
                new ObjectParameter("RedeemValidDays", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SS_InsertNewProduct", productIdParameter, productCodeParameter, productGroupIDParameter, priceParameter, descriptionParameter, chineseNameParameter, customisePriceParameter, foreColourParameter, backColourParameter, foodRefilParameter, sortOrderParameter, isTakeAwayParameter, fridgeQtyParameter, productTypeIDParameter, isFridgeItemParameter, isVegetarianParameter, isSpicyParameter, isGlutenFreeParameter, imageNameParameter, typeParameter, vMenuDescriptionParameter, vAllergensParameter, englishNameParameter, vatParameter, costPriceParameter, rewardPointsParameter, redemptionPointsParameter, rewardStartDateParameter, rewardEndDateParameter, redeemStartDateParameter, redeemEndDateParameter, redeemValidDaysParameter, newId);
        }
    
        public virtual int usp_SS_InsertNewProductGroup(string groupName, Nullable<int> parentGroupID, Nullable<int> productGroupId, string imageName)
        {
            var groupNameParameter = groupName != null ?
                new ObjectParameter("GroupName", groupName) :
                new ObjectParameter("GroupName", typeof(string));
    
            var parentGroupIDParameter = parentGroupID.HasValue ?
                new ObjectParameter("ParentGroupID", parentGroupID) :
                new ObjectParameter("ParentGroupID", typeof(int));
    
            var productGroupIdParameter = productGroupId.HasValue ?
                new ObjectParameter("ProductGroupId", productGroupId) :
                new ObjectParameter("ProductGroupId", typeof(int));
    
            var imageNameParameter = imageName != null ?
                new ObjectParameter("ImageName", imageName) :
                new ObjectParameter("ImageName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SS_InsertNewProductGroup", groupNameParameter, parentGroupIDParameter, productGroupIdParameter, imageNameParameter);
        }
    
        public virtual int usp_SS_InsertNewProductType(string typeDescription, Nullable<int> productTypeID, string value)
        {
            var typeDescriptionParameter = typeDescription != null ?
                new ObjectParameter("TypeDescription", typeDescription) :
                new ObjectParameter("TypeDescription", typeof(string));
    
            var productTypeIDParameter = productTypeID.HasValue ?
                new ObjectParameter("ProductTypeID", productTypeID) :
                new ObjectParameter("ProductTypeID", typeof(int));
    
            var valueParameter = value != null ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SS_InsertNewProductType", typeDescriptionParameter, productTypeIDParameter, valueParameter);
        }
    
        public virtual int usp_SS_InsertNewStockOrder(Nullable<int> purchaseOrderNumber, string supplierName, Nullable<System.DateTime> orderDate, ObjectParameter orderId)
        {
            var purchaseOrderNumberParameter = purchaseOrderNumber.HasValue ?
                new ObjectParameter("PurchaseOrderNumber", purchaseOrderNumber) :
                new ObjectParameter("PurchaseOrderNumber", typeof(int));
    
            var supplierNameParameter = supplierName != null ?
                new ObjectParameter("SupplierName", supplierName) :
                new ObjectParameter("SupplierName", typeof(string));
    
            var orderDateParameter = orderDate.HasValue ?
                new ObjectParameter("OrderDate", orderDate) :
                new ObjectParameter("OrderDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SS_InsertNewStockOrder", purchaseOrderNumberParameter, supplierNameParameter, orderDateParameter, orderId);
        }
    
        public virtual int usp_SS_InsertTillOrderPart(Nullable<System.Guid> orderGUID, Nullable<int> productID, Nullable<int> qTY, Nullable<decimal> price, Nullable<decimal> total, Nullable<int> userID, string type, Nullable<int> tableID, ObjectParameter iOut)
        {
            var orderGUIDParameter = orderGUID.HasValue ?
                new ObjectParameter("OrderGUID", orderGUID) :
                new ObjectParameter("OrderGUID", typeof(System.Guid));
    
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var qTYParameter = qTY.HasValue ?
                new ObjectParameter("QTY", qTY) :
                new ObjectParameter("QTY", typeof(int));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(decimal));
    
            var totalParameter = total.HasValue ?
                new ObjectParameter("Total", total) :
                new ObjectParameter("Total", typeof(decimal));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var tableIDParameter = tableID.HasValue ?
                new ObjectParameter("TableID", tableID) :
                new ObjectParameter("TableID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SS_InsertTillOrderPart", orderGUIDParameter, productIDParameter, qTYParameter, priceParameter, totalParameter, userIDParameter, typeParameter, tableIDParameter, iOut);
        }
    
        public virtual int usp_SS_InsertTillOrderPart_V1(Nullable<System.Guid> orderGUID, Nullable<int> productID, Nullable<int> qTY, Nullable<decimal> price, Nullable<decimal> total, Nullable<int> userID, string type, Nullable<int> tableID, ObjectParameter iOut)
        {
            var orderGUIDParameter = orderGUID.HasValue ?
                new ObjectParameter("OrderGUID", orderGUID) :
                new ObjectParameter("OrderGUID", typeof(System.Guid));
    
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var qTYParameter = qTY.HasValue ?
                new ObjectParameter("QTY", qTY) :
                new ObjectParameter("QTY", typeof(int));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(decimal));
    
            var totalParameter = total.HasValue ?
                new ObjectParameter("Total", total) :
                new ObjectParameter("Total", typeof(decimal));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var tableIDParameter = tableID.HasValue ?
                new ObjectParameter("TableID", tableID) :
                new ObjectParameter("TableID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SS_InsertTillOrderPart_V1", orderGUIDParameter, productIDParameter, qTYParameter, priceParameter, totalParameter, userIDParameter, typeParameter, tableIDParameter, iOut);
        }
    
        public virtual ObjectResult<usp_SS_LoadRefillTemplateItems_Result> usp_SS_LoadRefillTemplateItems(Nullable<int> templateFK)
        {
            var templateFKParameter = templateFK.HasValue ?
                new ObjectParameter("TemplateFK", templateFK) :
                new ObjectParameter("TemplateFK", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SS_LoadRefillTemplateItems_Result>("usp_SS_LoadRefillTemplateItems", templateFKParameter);
        }
    
        public virtual ObjectResult<usp_SS_LoadRefillTemplateItemsV2_Result> usp_SS_LoadRefillTemplateItemsV2(Nullable<int> templateFK)
        {
            var templateFKParameter = templateFK.HasValue ?
                new ObjectParameter("TemplateFK", templateFK) :
                new ObjectParameter("TemplateFK", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SS_LoadRefillTemplateItemsV2_Result>("usp_SS_LoadRefillTemplateItemsV2", templateFKParameter);
        }
    
        public virtual ObjectResult<usp_SS_LoadRefillTemplateItemsV3_Result> usp_SS_LoadRefillTemplateItemsV3(Nullable<int> day, string menuName)
        {
            var dayParameter = day.HasValue ?
                new ObjectParameter("Day", day) :
                new ObjectParameter("Day", typeof(int));
    
            var menuNameParameter = menuName != null ?
                new ObjectParameter("MenuName", menuName) :
                new ObjectParameter("MenuName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SS_LoadRefillTemplateItemsV3_Result>("usp_SS_LoadRefillTemplateItemsV3", dayParameter, menuNameParameter);
        }
    
        public virtual ObjectResult<usp_SS_PaymentHistoryForZ_Result> usp_SS_PaymentHistoryForZ(Nullable<System.DateTime> from, Nullable<System.DateTime> to, string pCName)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("To", to) :
                new ObjectParameter("To", typeof(System.DateTime));
    
            var pCNameParameter = pCName != null ?
                new ObjectParameter("PCName", pCName) :
                new ObjectParameter("PCName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SS_PaymentHistoryForZ_Result>("usp_SS_PaymentHistoryForZ", fromParameter, toParameter, pCNameParameter);
        }
    
        public virtual ObjectResult<usp_SS_PaymentHistoryForZ_V1_Result> usp_SS_PaymentHistoryForZ_V1(Nullable<System.DateTime> from, Nullable<System.DateTime> to, string pCName)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("To", to) :
                new ObjectParameter("To", typeof(System.DateTime));
    
            var pCNameParameter = pCName != null ?
                new ObjectParameter("PCName", pCName) :
                new ObjectParameter("PCName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SS_PaymentHistoryForZ_V1_Result>("usp_SS_PaymentHistoryForZ_V1", fromParameter, toParameter, pCNameParameter);
        }
    
        public virtual int usp_SS_PrintTakeAwayOrder(string pCName, string receipt, Nullable<int> userFK, string toPrinter)
        {
            var pCNameParameter = pCName != null ?
                new ObjectParameter("PCName", pCName) :
                new ObjectParameter("PCName", typeof(string));
    
            var receiptParameter = receipt != null ?
                new ObjectParameter("Receipt", receipt) :
                new ObjectParameter("Receipt", typeof(string));
    
            var userFKParameter = userFK.HasValue ?
                new ObjectParameter("UserFK", userFK) :
                new ObjectParameter("UserFK", typeof(int));
    
            var toPrinterParameter = toPrinter != null ?
                new ObjectParameter("ToPrinter", toPrinter) :
                new ObjectParameter("ToPrinter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SS_PrintTakeAwayOrder", pCNameParameter, receiptParameter, userFKParameter, toPrinterParameter);
        }
    
        public virtual int usp_SS_SaveDeliveryPostCode(string postCode, Nullable<int> postCodePriority, Nullable<bool> delInd)
        {
            var postCodeParameter = postCode != null ?
                new ObjectParameter("PostCode", postCode) :
                new ObjectParameter("PostCode", typeof(string));
    
            var postCodePriorityParameter = postCodePriority.HasValue ?
                new ObjectParameter("PostCodePriority", postCodePriority) :
                new ObjectParameter("PostCodePriority", typeof(int));
    
            var delIndParameter = delInd.HasValue ?
                new ObjectParameter("DelInd", delInd) :
                new ObjectParameter("DelInd", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SS_SaveDeliveryPostCode", postCodeParameter, postCodePriorityParameter, delIndParameter);
        }
    
        public virtual int usp_SS_SavePromotion(Nullable<int> promoId, string promotion, string promoCode, string description, string voucherValue, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<int> maxVouchers, Nullable<bool> tillPromotion, Nullable<bool> archived, Nullable<bool> delete)
        {
            var promoIdParameter = promoId.HasValue ?
                new ObjectParameter("promoId", promoId) :
                new ObjectParameter("promoId", typeof(int));
    
            var promotionParameter = promotion != null ?
                new ObjectParameter("promotion", promotion) :
                new ObjectParameter("promotion", typeof(string));
    
            var promoCodeParameter = promoCode != null ?
                new ObjectParameter("promoCode", promoCode) :
                new ObjectParameter("promoCode", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("description", description) :
                new ObjectParameter("description", typeof(string));
    
            var voucherValueParameter = voucherValue != null ?
                new ObjectParameter("voucherValue", voucherValue) :
                new ObjectParameter("voucherValue", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var maxVouchersParameter = maxVouchers.HasValue ?
                new ObjectParameter("MaxVouchers", maxVouchers) :
                new ObjectParameter("MaxVouchers", typeof(int));
    
            var tillPromotionParameter = tillPromotion.HasValue ?
                new ObjectParameter("TillPromotion", tillPromotion) :
                new ObjectParameter("TillPromotion", typeof(bool));
    
            var archivedParameter = archived.HasValue ?
                new ObjectParameter("Archived", archived) :
                new ObjectParameter("Archived", typeof(bool));
    
            var deleteParameter = delete.HasValue ?
                new ObjectParameter("Delete", delete) :
                new ObjectParameter("Delete", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SS_SavePromotion", promoIdParameter, promotionParameter, promoCodeParameter, descriptionParameter, voucherValueParameter, startDateParameter, endDateParameter, maxVouchersParameter, tillPromotionParameter, archivedParameter, deleteParameter);
        }
    
        public virtual ObjectResult<usp_SS_ShowDeliveryOrdersCount_Result> usp_SS_ShowDeliveryOrdersCount(Nullable<System.DateTime> fromDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SS_ShowDeliveryOrdersCount_Result>("usp_SS_ShowDeliveryOrdersCount", fromDateParameter);
        }
    
        public virtual ObjectResult<usp_SS_ShowTakeAwayOrders_Result> usp_SS_ShowTakeAwayOrders(Nullable<System.DateTime> fromDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SS_ShowTakeAwayOrders_Result>("usp_SS_ShowTakeAwayOrders", fromDateParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_SS_TakeAwayOrders(Nullable<int> takeAwayId, Nullable<int> addressID, string nAME, Nullable<int> collectionTime, string phone, Nullable<int> hasBeenCollected, Nullable<System.Guid> orderGUID, string orderNumber, Nullable<bool> bDelivery, Nullable<bool> bTakeaway, Nullable<bool> bOffline)
        {
            var takeAwayIdParameter = takeAwayId.HasValue ?
                new ObjectParameter("TakeAwayId", takeAwayId) :
                new ObjectParameter("TakeAwayId", typeof(int));
    
            var addressIDParameter = addressID.HasValue ?
                new ObjectParameter("AddressID", addressID) :
                new ObjectParameter("AddressID", typeof(int));
    
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var collectionTimeParameter = collectionTime.HasValue ?
                new ObjectParameter("CollectionTime", collectionTime) :
                new ObjectParameter("CollectionTime", typeof(int));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var hasBeenCollectedParameter = hasBeenCollected.HasValue ?
                new ObjectParameter("HasBeenCollected", hasBeenCollected) :
                new ObjectParameter("HasBeenCollected", typeof(int));
    
            var orderGUIDParameter = orderGUID.HasValue ?
                new ObjectParameter("OrderGUID", orderGUID) :
                new ObjectParameter("OrderGUID", typeof(System.Guid));
    
            var orderNumberParameter = orderNumber != null ?
                new ObjectParameter("OrderNumber", orderNumber) :
                new ObjectParameter("OrderNumber", typeof(string));
    
            var bDeliveryParameter = bDelivery.HasValue ?
                new ObjectParameter("bDelivery", bDelivery) :
                new ObjectParameter("bDelivery", typeof(bool));
    
            var bTakeawayParameter = bTakeaway.HasValue ?
                new ObjectParameter("bTakeaway", bTakeaway) :
                new ObjectParameter("bTakeaway", typeof(bool));
    
            var bOfflineParameter = bOffline.HasValue ?
                new ObjectParameter("bOffline", bOffline) :
                new ObjectParameter("bOffline", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_SS_TakeAwayOrders", takeAwayIdParameter, addressIDParameter, nAMEParameter, collectionTimeParameter, phoneParameter, hasBeenCollectedParameter, orderGUIDParameter, orderNumberParameter, bDeliveryParameter, bTakeawayParameter, bOfflineParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_SS_UpdateAddress(Nullable<int> addressID, string postCode, string addressFull)
        {
            var addressIDParameter = addressID.HasValue ?
                new ObjectParameter("AddressID", addressID) :
                new ObjectParameter("AddressID", typeof(int));
    
            var postCodeParameter = postCode != null ?
                new ObjectParameter("PostCode", postCode) :
                new ObjectParameter("PostCode", typeof(string));
    
            var addressFullParameter = addressFull != null ?
                new ObjectParameter("AddressFull", addressFull) :
                new ObjectParameter("AddressFull", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_SS_UpdateAddress", addressIDParameter, postCodeParameter, addressFullParameter);
        }
    
        public virtual int usp_SS_UpdateCurrentStatus(Nullable<int> tableID, Nullable<int> currentStatus)
        {
            var tableIDParameter = tableID.HasValue ?
                new ObjectParameter("TableID", tableID) :
                new ObjectParameter("TableID", typeof(int));
    
            var currentStatusParameter = currentStatus.HasValue ?
                new ObjectParameter("CurrentStatus", currentStatus) :
                new ObjectParameter("CurrentStatus", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SS_UpdateCurrentStatus", tableIDParameter, currentStatusParameter);
        }
    
        public virtual int usp_SS_UpdateDelItemsSend(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SS_UpdateDelItemsSend", iDParameter);
        }
    
        public virtual int usp_SS_UpdateDeliveryConfirmation(Nullable<System.Guid> orderGUID)
        {
            var orderGUIDParameter = orderGUID.HasValue ?
                new ObjectParameter("OrderGUID", orderGUID) :
                new ObjectParameter("OrderGUID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SS_UpdateDeliveryConfirmation", orderGUIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_SS_UpdateDeliveryStaff(Nullable<int> deliveryStaffId, string name, string mobile, string email, string imageName, Nullable<bool> delInd)
        {
            var deliveryStaffIdParameter = deliveryStaffId.HasValue ?
                new ObjectParameter("DeliveryStaffId", deliveryStaffId) :
                new ObjectParameter("DeliveryStaffId", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var imageNameParameter = imageName != null ?
                new ObjectParameter("ImageName", imageName) :
                new ObjectParameter("ImageName", typeof(string));
    
            var delIndParameter = delInd.HasValue ?
                new ObjectParameter("DelInd", delInd) :
                new ObjectParameter("DelInd", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_SS_UpdateDeliveryStaff", deliveryStaffIdParameter, nameParameter, mobileParameter, emailParameter, imageNameParameter, delIndParameter);
        }
    
        public virtual int usp_SS_UpdateDishOrderSend(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SS_UpdateDishOrderSend", iDParameter);
        }
    
        public virtual int usp_SS_UpdateDrinkSoldSend(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SS_UpdateDrinkSoldSend", iDParameter);
        }
    
        public virtual int usp_SS_UpdateDrinkTargetSend(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SS_UpdateDrinkTargetSend", iDParameter);
        }
    
        public virtual int usp_SS_UpdateItemServeSend(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SS_UpdateItemServeSend", iDParameter);
        }
    
        public virtual int usp_SS_UpdateLoginSend(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SS_UpdateLoginSend", iDParameter);
        }
    
        public virtual int usp_SS_UpdateMenu(Nullable<int> menuID, string menuName, string menuDescription, Nullable<bool> delind, Nullable<int> sortOrder)
        {
            var menuIDParameter = menuID.HasValue ?
                new ObjectParameter("MenuID", menuID) :
                new ObjectParameter("MenuID", typeof(int));
    
            var menuNameParameter = menuName != null ?
                new ObjectParameter("MenuName", menuName) :
                new ObjectParameter("MenuName", typeof(string));
    
            var menuDescriptionParameter = menuDescription != null ?
                new ObjectParameter("MenuDescription", menuDescription) :
                new ObjectParameter("MenuDescription", typeof(string));
    
            var delindParameter = delind.HasValue ?
                new ObjectParameter("Delind", delind) :
                new ObjectParameter("Delind", typeof(bool));
    
            var sortOrderParameter = sortOrder.HasValue ?
                new ObjectParameter("SortOrder", sortOrder) :
                new ObjectParameter("SortOrder", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SS_UpdateMenu", menuIDParameter, menuNameParameter, menuDescriptionParameter, delindParameter, sortOrderParameter);
        }
    
        public virtual int usp_SS_UpdateOnlineReservationToTill(string restaurantName, string forename, string surname, string contactNumber, string reservationNotes, Nullable<int> totalNoOfGuests, Nullable<System.DateTime> reservationDate, Nullable<int> reservationTime, Nullable<decimal> deposit, Nullable<int> noOfSeats, Nullable<int> noOfHighChairs, Nullable<int> noOfWheelChairs, Nullable<int> noOfPrams, Nullable<int> branchReservationID)
        {
            var restaurantNameParameter = restaurantName != null ?
                new ObjectParameter("RestaurantName", restaurantName) :
                new ObjectParameter("RestaurantName", typeof(string));
    
            var forenameParameter = forename != null ?
                new ObjectParameter("Forename", forename) :
                new ObjectParameter("Forename", typeof(string));
    
            var surnameParameter = surname != null ?
                new ObjectParameter("Surname", surname) :
                new ObjectParameter("Surname", typeof(string));
    
            var contactNumberParameter = contactNumber != null ?
                new ObjectParameter("ContactNumber", contactNumber) :
                new ObjectParameter("ContactNumber", typeof(string));
    
            var reservationNotesParameter = reservationNotes != null ?
                new ObjectParameter("ReservationNotes", reservationNotes) :
                new ObjectParameter("ReservationNotes", typeof(string));
    
            var totalNoOfGuestsParameter = totalNoOfGuests.HasValue ?
                new ObjectParameter("TotalNoOfGuests", totalNoOfGuests) :
                new ObjectParameter("TotalNoOfGuests", typeof(int));
    
            var reservationDateParameter = reservationDate.HasValue ?
                new ObjectParameter("ReservationDate", reservationDate) :
                new ObjectParameter("ReservationDate", typeof(System.DateTime));
    
            var reservationTimeParameter = reservationTime.HasValue ?
                new ObjectParameter("ReservationTime", reservationTime) :
                new ObjectParameter("ReservationTime", typeof(int));
    
            var depositParameter = deposit.HasValue ?
                new ObjectParameter("Deposit", deposit) :
                new ObjectParameter("Deposit", typeof(decimal));
    
            var noOfSeatsParameter = noOfSeats.HasValue ?
                new ObjectParameter("NoOfSeats", noOfSeats) :
                new ObjectParameter("NoOfSeats", typeof(int));
    
            var noOfHighChairsParameter = noOfHighChairs.HasValue ?
                new ObjectParameter("NoOfHighChairs", noOfHighChairs) :
                new ObjectParameter("NoOfHighChairs", typeof(int));
    
            var noOfWheelChairsParameter = noOfWheelChairs.HasValue ?
                new ObjectParameter("NoOfWheelChairs", noOfWheelChairs) :
                new ObjectParameter("NoOfWheelChairs", typeof(int));
    
            var noOfPramsParameter = noOfPrams.HasValue ?
                new ObjectParameter("NoOfPrams", noOfPrams) :
                new ObjectParameter("NoOfPrams", typeof(int));
    
            var branchReservationIDParameter = branchReservationID.HasValue ?
                new ObjectParameter("BranchReservationID", branchReservationID) :
                new ObjectParameter("BranchReservationID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SS_UpdateOnlineReservationToTill", restaurantNameParameter, forenameParameter, surnameParameter, contactNumberParameter, reservationNotesParameter, totalNoOfGuestsParameter, reservationDateParameter, reservationTimeParameter, depositParameter, noOfSeatsParameter, noOfHighChairsParameter, noOfWheelChairsParameter, noOfPramsParameter, branchReservationIDParameter);
        }
    
        public virtual int usp_SS_UpdateOrderServeTimeSend(Nullable<System.Guid> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SS_UpdateOrderServeTimeSend", iDParameter);
        }
    
        public virtual int usp_SS_UpdateOrderUploadSuccessful(Nullable<System.Guid> orderGuid)
        {
            var orderGuidParameter = orderGuid.HasValue ?
                new ObjectParameter("OrderGuid", orderGuid) :
                new ObjectParameter("OrderGuid", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SS_UpdateOrderUploadSuccessful", orderGuidParameter);
        }
    
        public virtual int usp_SS_UpdateProductGroupNames(string groupName, Nullable<int> productGroupID, Nullable<bool> delind)
        {
            var groupNameParameter = groupName != null ?
                new ObjectParameter("GroupName", groupName) :
                new ObjectParameter("GroupName", typeof(string));
    
            var productGroupIDParameter = productGroupID.HasValue ?
                new ObjectParameter("ProductGroupID", productGroupID) :
                new ObjectParameter("ProductGroupID", typeof(int));
    
            var delindParameter = delind.HasValue ?
                new ObjectParameter("Delind", delind) :
                new ObjectParameter("Delind", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SS_UpdateProductGroupNames", groupNameParameter, productGroupIDParameter, delindParameter);
        }
    
        public virtual int usp_SS_UpdateProductGroupOfProduct(Nullable<int> productGroupId, Nullable<int> productID)
        {
            var productGroupIdParameter = productGroupId.HasValue ?
                new ObjectParameter("ProductGroupId", productGroupId) :
                new ObjectParameter("ProductGroupId", typeof(int));
    
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SS_UpdateProductGroupOfProduct", productGroupIdParameter, productIDParameter);
        }
    
        public virtual int usp_SS_UpdateProductGroupValues(Nullable<int> parentGroupId, Nullable<int> productGroupID)
        {
            var parentGroupIdParameter = parentGroupId.HasValue ?
                new ObjectParameter("ParentGroupId", parentGroupId) :
                new ObjectParameter("ParentGroupId", typeof(int));
    
            var productGroupIDParameter = productGroupID.HasValue ?
                new ObjectParameter("ProductGroupID", productGroupID) :
                new ObjectParameter("ProductGroupID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SS_UpdateProductGroupValues", parentGroupIdParameter, productGroupIDParameter);
        }
    
        public virtual int usp_SS_UpdateRefillItemSend(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SS_UpdateRefillItemSend", iDParameter);
        }
    
        public virtual int usp_SS_UpdateRefundSend(Nullable<System.Guid> orderGuid)
        {
            var orderGuidParameter = orderGuid.HasValue ?
                new ObjectParameter("OrderGuid", orderGuid) :
                new ObjectParameter("OrderGuid", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SS_UpdateRefundSend", orderGuidParameter);
        }
    
        public virtual int usp_SS_UpdateStockTemplates(Nullable<int> templateID, string templateName)
        {
            var templateIDParameter = templateID.HasValue ?
                new ObjectParameter("TemplateID", templateID) :
                new ObjectParameter("TemplateID", typeof(int));
    
            var templateNameParameter = templateName != null ?
                new ObjectParameter("TemplateName", templateName) :
                new ObjectParameter("TemplateName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SS_UpdateStockTemplates", templateIDParameter, templateNameParameter);
        }
    
        public virtual int usp_SS_UpdateTableStatus(Nullable<int> tableID, string type)
        {
            var tableIDParameter = tableID.HasValue ?
                new ObjectParameter("TableID", tableID) :
                new ObjectParameter("TableID", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SS_UpdateTableStatus", tableIDParameter, typeParameter);
        }
    
        public virtual int usp_SS_UpdateTargetsSend(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SS_UpdateTargetsSend", iDParameter);
        }
    
        public virtual int usp_SS_UpdateToiletCheckSend(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SS_UpdateToiletCheckSend", iDParameter);
        }
    
        public virtual int usp_SS_UpdateUnclaimedProductsSend(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SS_UpdateUnclaimedProductsSend", iDParameter);
        }
    
        public virtual ObjectResult<usp_SS_VATPaymentSummary_Result> usp_SS_VATPaymentSummary(Nullable<System.DateTime> from, Nullable<System.DateTime> to, string pCName)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("To", to) :
                new ObjectParameter("To", typeof(System.DateTime));
    
            var pCNameParameter = pCName != null ?
                new ObjectParameter("PCName", pCName) :
                new ObjectParameter("PCName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SS_VATPaymentSummary_Result>("usp_SS_VATPaymentSummary", fromParameter, toParameter, pCNameParameter);
        }
    
        public virtual ObjectResult<usp_SS_VATPaymentSummary_V1_Result> usp_SS_VATPaymentSummary_V1(Nullable<System.DateTime> from, Nullable<System.DateTime> to, string pCName)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("To", to) :
                new ObjectParameter("To", typeof(System.DateTime));
    
            var pCNameParameter = pCName != null ?
                new ObjectParameter("PCName", pCName) :
                new ObjectParameter("PCName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SS_VATPaymentSummary_V1_Result>("usp_SS_VATPaymentSummary_V1", fromParameter, toParameter, pCNameParameter);
        }
    
        public virtual int usp_SS_AddOnlineReservationToTill_V2(Nullable<int> adminReservationId, string restaurantName, string forename, string surname, string contactNumber, string reservationNotes, Nullable<int> totalNoOfGuests, Nullable<System.DateTime> reservationDate, Nullable<int> reservationTime, Nullable<decimal> deposit, Nullable<int> noOfSeats, Nullable<int> noOfHighChairs, Nullable<int> noOfWheelChairs, Nullable<int> noOfPrams, string reservationCode)
        {
            var adminReservationIdParameter = adminReservationId.HasValue ?
                new ObjectParameter("AdminReservationId", adminReservationId) :
                new ObjectParameter("AdminReservationId", typeof(int));
    
            var restaurantNameParameter = restaurantName != null ?
                new ObjectParameter("RestaurantName", restaurantName) :
                new ObjectParameter("RestaurantName", typeof(string));
    
            var forenameParameter = forename != null ?
                new ObjectParameter("Forename", forename) :
                new ObjectParameter("Forename", typeof(string));
    
            var surnameParameter = surname != null ?
                new ObjectParameter("Surname", surname) :
                new ObjectParameter("Surname", typeof(string));
    
            var contactNumberParameter = contactNumber != null ?
                new ObjectParameter("ContactNumber", contactNumber) :
                new ObjectParameter("ContactNumber", typeof(string));
    
            var reservationNotesParameter = reservationNotes != null ?
                new ObjectParameter("ReservationNotes", reservationNotes) :
                new ObjectParameter("ReservationNotes", typeof(string));
    
            var totalNoOfGuestsParameter = totalNoOfGuests.HasValue ?
                new ObjectParameter("TotalNoOfGuests", totalNoOfGuests) :
                new ObjectParameter("TotalNoOfGuests", typeof(int));
    
            var reservationDateParameter = reservationDate.HasValue ?
                new ObjectParameter("ReservationDate", reservationDate) :
                new ObjectParameter("ReservationDate", typeof(System.DateTime));
    
            var reservationTimeParameter = reservationTime.HasValue ?
                new ObjectParameter("ReservationTime", reservationTime) :
                new ObjectParameter("ReservationTime", typeof(int));
    
            var depositParameter = deposit.HasValue ?
                new ObjectParameter("Deposit", deposit) :
                new ObjectParameter("Deposit", typeof(decimal));
    
            var noOfSeatsParameter = noOfSeats.HasValue ?
                new ObjectParameter("NoOfSeats", noOfSeats) :
                new ObjectParameter("NoOfSeats", typeof(int));
    
            var noOfHighChairsParameter = noOfHighChairs.HasValue ?
                new ObjectParameter("NoOfHighChairs", noOfHighChairs) :
                new ObjectParameter("NoOfHighChairs", typeof(int));
    
            var noOfWheelChairsParameter = noOfWheelChairs.HasValue ?
                new ObjectParameter("NoOfWheelChairs", noOfWheelChairs) :
                new ObjectParameter("NoOfWheelChairs", typeof(int));
    
            var noOfPramsParameter = noOfPrams.HasValue ?
                new ObjectParameter("NoOfPrams", noOfPrams) :
                new ObjectParameter("NoOfPrams", typeof(int));
    
            var reservationCodeParameter = reservationCode != null ?
                new ObjectParameter("ReservationCode", reservationCode) :
                new ObjectParameter("ReservationCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SS_AddOnlineReservationToTill_V2", adminReservationIdParameter, restaurantNameParameter, forenameParameter, surnameParameter, contactNumberParameter, reservationNotesParameter, totalNoOfGuestsParameter, reservationDateParameter, reservationTimeParameter, depositParameter, noOfSeatsParameter, noOfHighChairsParameter, noOfWheelChairsParameter, noOfPramsParameter, reservationCodeParameter);
        }
    
        public virtual int usp_AN_InsertOrder_V2(Nullable<int> tableID, Nullable<int> tabID, string tableNumber, string time, Nullable<int> userID, Nullable<int> custID, Nullable<int> custCount, Nullable<int> adCount, Nullable<int> kdCount, Nullable<int> jnCount, Nullable<bool> prevCust, string reservedCustomer, Nullable<int> reservationID, Nullable<bool> payAsYouGo, ObjectParameter orderID)
        {
            var tableIDParameter = tableID.HasValue ?
                new ObjectParameter("TableID", tableID) :
                new ObjectParameter("TableID", typeof(int));
    
            var tabIDParameter = tabID.HasValue ?
                new ObjectParameter("TabID", tabID) :
                new ObjectParameter("TabID", typeof(int));
    
            var tableNumberParameter = tableNumber != null ?
                new ObjectParameter("TableNumber", tableNumber) :
                new ObjectParameter("TableNumber", typeof(string));
    
            var timeParameter = time != null ?
                new ObjectParameter("Time", time) :
                new ObjectParameter("Time", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var custIDParameter = custID.HasValue ?
                new ObjectParameter("CustID", custID) :
                new ObjectParameter("CustID", typeof(int));
    
            var custCountParameter = custCount.HasValue ?
                new ObjectParameter("CustCount", custCount) :
                new ObjectParameter("CustCount", typeof(int));
    
            var adCountParameter = adCount.HasValue ?
                new ObjectParameter("AdCount", adCount) :
                new ObjectParameter("AdCount", typeof(int));
    
            var kdCountParameter = kdCount.HasValue ?
                new ObjectParameter("KdCount", kdCount) :
                new ObjectParameter("KdCount", typeof(int));
    
            var jnCountParameter = jnCount.HasValue ?
                new ObjectParameter("JnCount", jnCount) :
                new ObjectParameter("JnCount", typeof(int));
    
            var prevCustParameter = prevCust.HasValue ?
                new ObjectParameter("PrevCust", prevCust) :
                new ObjectParameter("PrevCust", typeof(bool));
    
            var reservedCustomerParameter = reservedCustomer != null ?
                new ObjectParameter("ReservedCustomer", reservedCustomer) :
                new ObjectParameter("ReservedCustomer", typeof(string));
    
            var reservationIDParameter = reservationID.HasValue ?
                new ObjectParameter("ReservationID", reservationID) :
                new ObjectParameter("ReservationID", typeof(int));
    
            var payAsYouGoParameter = payAsYouGo.HasValue ?
                new ObjectParameter("PayAsYouGo", payAsYouGo) :
                new ObjectParameter("PayAsYouGo", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_AN_InsertOrder_V2", tableIDParameter, tabIDParameter, tableNumberParameter, timeParameter, userIDParameter, custIDParameter, custCountParameter, adCountParameter, kdCountParameter, jnCountParameter, prevCustParameter, reservedCustomerParameter, reservationIDParameter, payAsYouGoParameter, orderID);
        }
    }
}
